import { z } from "zod";
import type { Property as GeneratedProperty, Unit as GeneratedUnit } from "./__generated__/types";
import { type TransformValue } from "./core";
export type CustomProperty = `--${string}`;
export type StyleProperty = GeneratedProperty | CustomProperty;
declare const Unit: z.ZodType<GeneratedUnit | "number">;
export type Unit = z.infer<typeof Unit>;
export declare const UnitValue: z.ZodObject<{
    type: z.ZodLiteral<"unit">;
    unit: z.ZodType<"number" | GeneratedUnit, z.ZodTypeDef, "number" | GeneratedUnit>;
    value: z.ZodNumber;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "unit";
    value: number;
    unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
    hidden?: boolean | undefined;
}, {
    type: "unit";
    value: number;
    unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
    hidden?: boolean | undefined;
}>;
export type UnitValue = z.infer<typeof UnitValue>;
export declare const KeywordValue: z.ZodObject<{
    type: z.ZodLiteral<"keyword">;
    value: z.ZodString;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "keyword";
    value: string;
    hidden?: boolean | undefined;
}, {
    type: "keyword";
    value: string;
    hidden?: boolean | undefined;
}>;
export type KeywordValue = z.infer<typeof KeywordValue>;
/**
 * Valid unparsed css value
 **/
export declare const UnparsedValue: z.ZodObject<{
    type: z.ZodLiteral<"unparsed">;
    value: z.ZodString;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "unparsed";
    value: string;
    hidden?: boolean | undefined;
}, {
    type: "unparsed";
    value: string;
    hidden?: boolean | undefined;
}>;
export type UnparsedValue = z.infer<typeof UnparsedValue>;
declare const FontFamilyValue: z.ZodObject<{
    type: z.ZodLiteral<"fontFamily">;
    value: z.ZodArray<z.ZodString, "many">;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "fontFamily";
    value: string[];
    hidden?: boolean | undefined;
}, {
    type: "fontFamily";
    value: string[];
    hidden?: boolean | undefined;
}>;
export type FontFamilyValue = z.infer<typeof FontFamilyValue>;
declare const RgbValue: z.ZodObject<{
    type: z.ZodLiteral<"rgb">;
    r: z.ZodNumber;
    g: z.ZodNumber;
    b: z.ZodNumber;
    alpha: z.ZodNumber;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "rgb";
    r: number;
    g: number;
    b: number;
    alpha: number;
    hidden?: boolean | undefined;
}, {
    type: "rgb";
    r: number;
    g: number;
    b: number;
    alpha: number;
    hidden?: boolean | undefined;
}>;
export type RgbValue = z.infer<typeof RgbValue>;
export type FunctionValue = z.infer<typeof FunctionValue>;
export declare const FunctionValue: z.ZodType<{
    type: "function";
    name: string;
    args: StyleValue;
    hidden?: boolean;
}>;
export declare const ImageValue: z.ZodObject<{
    type: z.ZodLiteral<"image">;
    value: z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"asset">;
        value: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: "asset";
        value: string;
    }, {
        type: "asset";
        value: string;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"url">;
        url: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: "url";
        url: string;
    }, {
        type: "url";
        url: string;
    }>]>;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "image";
    value: {
        type: "asset";
        value: string;
    } | {
        type: "url";
        url: string;
    };
    hidden?: boolean | undefined;
}, {
    type: "image";
    value: {
        type: "asset";
        value: string;
    } | {
        type: "url";
        url: string;
    };
    hidden?: boolean | undefined;
}>;
export type ImageValue = z.infer<typeof ImageValue>;
export declare const GuaranteedInvalidValue: z.ZodObject<{
    type: z.ZodLiteral<"guaranteedInvalid">;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "guaranteedInvalid";
    hidden?: boolean | undefined;
}, {
    type: "guaranteedInvalid";
    hidden?: boolean | undefined;
}>;
export type GuaranteedInvalidValue = z.infer<typeof GuaranteedInvalidValue>;
export declare const InvalidValue: z.ZodObject<{
    type: z.ZodLiteral<"invalid">;
    value: z.ZodString;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "invalid";
    value: string;
    hidden?: boolean | undefined;
}, {
    type: "invalid";
    value: string;
    hidden?: boolean | undefined;
}>;
export type InvalidValue = z.infer<typeof InvalidValue>;
declare const UnsetValue: z.ZodObject<{
    type: z.ZodLiteral<"unset">;
    value: z.ZodLiteral<"">;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "unset";
    value: "";
    hidden?: boolean | undefined;
}, {
    type: "unset";
    value: "";
    hidden?: boolean | undefined;
}>;
export type UnsetValue = z.infer<typeof UnsetValue>;
export declare const VarFallback: z.ZodUnion<[z.ZodObject<{
    type: z.ZodLiteral<"unparsed">;
    value: z.ZodString;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "unparsed";
    value: string;
    hidden?: boolean | undefined;
}, {
    type: "unparsed";
    value: string;
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"keyword">;
    value: z.ZodString;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "keyword";
    value: string;
    hidden?: boolean | undefined;
}, {
    type: "keyword";
    value: string;
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"unit">;
    unit: z.ZodType<"number" | GeneratedUnit, z.ZodTypeDef, "number" | GeneratedUnit>;
    value: z.ZodNumber;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "unit";
    value: number;
    unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
    hidden?: boolean | undefined;
}, {
    type: "unit";
    value: number;
    unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"rgb">;
    r: z.ZodNumber;
    g: z.ZodNumber;
    b: z.ZodNumber;
    alpha: z.ZodNumber;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "rgb";
    r: number;
    g: number;
    b: number;
    alpha: number;
    hidden?: boolean | undefined;
}, {
    type: "rgb";
    r: number;
    g: number;
    b: number;
    alpha: number;
    hidden?: boolean | undefined;
}>]>;
export type VarFallback = z.infer<typeof VarFallback>;
export declare const toVarFallback: (styleValue: StyleValue, transformValue?: TransformValue) => VarFallback;
declare const VarValue: z.ZodObject<{
    type: z.ZodLiteral<"var">;
    value: z.ZodString;
    fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"unparsed">;
        value: z.ZodString;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    }, {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"keyword">;
        value: z.ZodString;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    }, {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"unit">;
        unit: z.ZodType<"number" | GeneratedUnit, z.ZodTypeDef, "number" | GeneratedUnit>;
        value: z.ZodNumber;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    }, {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"rgb">;
        r: z.ZodNumber;
        g: z.ZodNumber;
        b: z.ZodNumber;
        alpha: z.ZodNumber;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    }, {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    }>]>>;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "var";
    value: string;
    fallback?: {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    } | {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    } | undefined;
    hidden?: boolean | undefined;
}, {
    type: "var";
    value: string;
    fallback?: {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    } | {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    } | undefined;
    hidden?: boolean | undefined;
}>;
export type VarValue = z.infer<typeof VarValue>;
export declare const TupleValueItem: z.ZodUnion<[z.ZodObject<{
    type: z.ZodLiteral<"unit">;
    unit: z.ZodType<"number" | GeneratedUnit, z.ZodTypeDef, "number" | GeneratedUnit>;
    value: z.ZodNumber;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "unit";
    value: number;
    unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
    hidden?: boolean | undefined;
}, {
    type: "unit";
    value: number;
    unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"keyword">;
    value: z.ZodString;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "keyword";
    value: string;
    hidden?: boolean | undefined;
}, {
    type: "keyword";
    value: string;
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"unparsed">;
    value: z.ZodString;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "unparsed";
    value: string;
    hidden?: boolean | undefined;
}, {
    type: "unparsed";
    value: string;
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"image">;
    value: z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"asset">;
        value: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: "asset";
        value: string;
    }, {
        type: "asset";
        value: string;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"url">;
        url: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: "url";
        url: string;
    }, {
        type: "url";
        url: string;
    }>]>;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "image";
    value: {
        type: "asset";
        value: string;
    } | {
        type: "url";
        url: string;
    };
    hidden?: boolean | undefined;
}, {
    type: "image";
    value: {
        type: "asset";
        value: string;
    } | {
        type: "url";
        url: string;
    };
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"rgb">;
    r: z.ZodNumber;
    g: z.ZodNumber;
    b: z.ZodNumber;
    alpha: z.ZodNumber;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "rgb";
    r: number;
    g: number;
    b: number;
    alpha: number;
    hidden?: boolean | undefined;
}, {
    type: "rgb";
    r: number;
    g: number;
    b: number;
    alpha: number;
    hidden?: boolean | undefined;
}>, z.ZodType<{
    type: "function";
    name: string;
    args: StyleValue;
    hidden?: boolean;
}, z.ZodTypeDef, {
    type: "function";
    name: string;
    args: StyleValue;
    hidden?: boolean;
}>, z.ZodObject<{
    type: z.ZodLiteral<"var">;
    value: z.ZodString;
    fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"unparsed">;
        value: z.ZodString;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    }, {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"keyword">;
        value: z.ZodString;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    }, {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"unit">;
        unit: z.ZodType<"number" | GeneratedUnit, z.ZodTypeDef, "number" | GeneratedUnit>;
        value: z.ZodNumber;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    }, {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"rgb">;
        r: z.ZodNumber;
        g: z.ZodNumber;
        b: z.ZodNumber;
        alpha: z.ZodNumber;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    }, {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    }>]>>;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "var";
    value: string;
    fallback?: {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    } | {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    } | undefined;
    hidden?: boolean | undefined;
}, {
    type: "var";
    value: string;
    fallback?: {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    } | {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    } | undefined;
    hidden?: boolean | undefined;
}>]>;
export type TupleValueItem = z.infer<typeof TupleValueItem>;
export declare const TupleValue: z.ZodObject<{
    type: z.ZodLiteral<"tuple">;
    value: z.ZodArray<z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"unit">;
        unit: z.ZodType<"number" | GeneratedUnit, z.ZodTypeDef, "number" | GeneratedUnit>;
        value: z.ZodNumber;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    }, {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"keyword">;
        value: z.ZodString;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    }, {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"unparsed">;
        value: z.ZodString;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    }, {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"image">;
        value: z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"asset">;
            value: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            type: "asset";
            value: string;
        }, {
            type: "asset";
            value: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"url">;
            url: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            type: "url";
            url: string;
        }, {
            type: "url";
            url: string;
        }>]>;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "image";
        value: {
            type: "asset";
            value: string;
        } | {
            type: "url";
            url: string;
        };
        hidden?: boolean | undefined;
    }, {
        type: "image";
        value: {
            type: "asset";
            value: string;
        } | {
            type: "url";
            url: string;
        };
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"rgb">;
        r: z.ZodNumber;
        g: z.ZodNumber;
        b: z.ZodNumber;
        alpha: z.ZodNumber;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    }, {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    }>, z.ZodType<{
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    }, z.ZodTypeDef, {
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"var">;
        value: z.ZodString;
        fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"unparsed">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        }, {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"keyword">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        }, {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unit">;
            unit: z.ZodType<"number" | GeneratedUnit, z.ZodTypeDef, "number" | GeneratedUnit>;
            value: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        }, {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"rgb">;
            r: z.ZodNumber;
            g: z.ZodNumber;
            b: z.ZodNumber;
            alpha: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }>]>>;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "var";
        value: string;
        fallback?: {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    }, {
        type: "var";
        value: string;
        fallback?: {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    }>]>, "many">;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "tuple";
    value: ({
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    } | {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    } | {
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    } | {
        type: "image";
        value: {
            type: "asset";
            value: string;
        } | {
            type: "url";
            url: string;
        };
        hidden?: boolean | undefined;
    } | {
        type: "var";
        value: string;
        fallback?: {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    })[];
    hidden?: boolean | undefined;
}, {
    type: "tuple";
    value: ({
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    } | {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    } | {
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    } | {
        type: "image";
        value: {
            type: "asset";
            value: string;
        } | {
            type: "url";
            url: string;
        };
        hidden?: boolean | undefined;
    } | {
        type: "var";
        value: string;
        fallback?: {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    })[];
    hidden?: boolean | undefined;
}>;
export type TupleValue = z.infer<typeof TupleValue>;
declare const LayerValueItem: z.ZodUnion<[z.ZodObject<{
    type: z.ZodLiteral<"unit">;
    unit: z.ZodType<"number" | GeneratedUnit, z.ZodTypeDef, "number" | GeneratedUnit>;
    value: z.ZodNumber;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "unit";
    value: number;
    unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
    hidden?: boolean | undefined;
}, {
    type: "unit";
    value: number;
    unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"keyword">;
    value: z.ZodString;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "keyword";
    value: string;
    hidden?: boolean | undefined;
}, {
    type: "keyword";
    value: string;
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"unparsed">;
    value: z.ZodString;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "unparsed";
    value: string;
    hidden?: boolean | undefined;
}, {
    type: "unparsed";
    value: string;
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"image">;
    value: z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"asset">;
        value: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: "asset";
        value: string;
    }, {
        type: "asset";
        value: string;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"url">;
        url: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: "url";
        url: string;
    }, {
        type: "url";
        url: string;
    }>]>;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "image";
    value: {
        type: "asset";
        value: string;
    } | {
        type: "url";
        url: string;
    };
    hidden?: boolean | undefined;
}, {
    type: "image";
    value: {
        type: "asset";
        value: string;
    } | {
        type: "url";
        url: string;
    };
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"tuple">;
    value: z.ZodArray<z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"unit">;
        unit: z.ZodType<"number" | GeneratedUnit, z.ZodTypeDef, "number" | GeneratedUnit>;
        value: z.ZodNumber;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    }, {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"keyword">;
        value: z.ZodString;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    }, {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"unparsed">;
        value: z.ZodString;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    }, {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"image">;
        value: z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"asset">;
            value: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            type: "asset";
            value: string;
        }, {
            type: "asset";
            value: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"url">;
            url: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            type: "url";
            url: string;
        }, {
            type: "url";
            url: string;
        }>]>;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "image";
        value: {
            type: "asset";
            value: string;
        } | {
            type: "url";
            url: string;
        };
        hidden?: boolean | undefined;
    }, {
        type: "image";
        value: {
            type: "asset";
            value: string;
        } | {
            type: "url";
            url: string;
        };
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"rgb">;
        r: z.ZodNumber;
        g: z.ZodNumber;
        b: z.ZodNumber;
        alpha: z.ZodNumber;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    }, {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    }>, z.ZodType<{
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    }, z.ZodTypeDef, {
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"var">;
        value: z.ZodString;
        fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"unparsed">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        }, {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"keyword">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        }, {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unit">;
            unit: z.ZodType<"number" | GeneratedUnit, z.ZodTypeDef, "number" | GeneratedUnit>;
            value: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        }, {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"rgb">;
            r: z.ZodNumber;
            g: z.ZodNumber;
            b: z.ZodNumber;
            alpha: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }>]>>;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "var";
        value: string;
        fallback?: {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    }, {
        type: "var";
        value: string;
        fallback?: {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    }>]>, "many">;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "tuple";
    value: ({
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    } | {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    } | {
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    } | {
        type: "image";
        value: {
            type: "asset";
            value: string;
        } | {
            type: "url";
            url: string;
        };
        hidden?: boolean | undefined;
    } | {
        type: "var";
        value: string;
        fallback?: {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    })[];
    hidden?: boolean | undefined;
}, {
    type: "tuple";
    value: ({
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    } | {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    } | {
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    } | {
        type: "image";
        value: {
            type: "asset";
            value: string;
        } | {
            type: "url";
            url: string;
        };
        hidden?: boolean | undefined;
    } | {
        type: "var";
        value: string;
        fallback?: {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    })[];
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"rgb">;
    r: z.ZodNumber;
    g: z.ZodNumber;
    b: z.ZodNumber;
    alpha: z.ZodNumber;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "rgb";
    r: number;
    g: number;
    b: number;
    alpha: number;
    hidden?: boolean | undefined;
}, {
    type: "rgb";
    r: number;
    g: number;
    b: number;
    alpha: number;
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"invalid">;
    value: z.ZodString;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "invalid";
    value: string;
    hidden?: boolean | undefined;
}, {
    type: "invalid";
    value: string;
    hidden?: boolean | undefined;
}>, z.ZodType<{
    type: "function";
    name: string;
    args: StyleValue;
    hidden?: boolean;
}, z.ZodTypeDef, {
    type: "function";
    name: string;
    args: StyleValue;
    hidden?: boolean;
}>, z.ZodObject<{
    type: z.ZodLiteral<"var">;
    value: z.ZodString;
    fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"unparsed">;
        value: z.ZodString;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    }, {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"keyword">;
        value: z.ZodString;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    }, {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"unit">;
        unit: z.ZodType<"number" | GeneratedUnit, z.ZodTypeDef, "number" | GeneratedUnit>;
        value: z.ZodNumber;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    }, {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"rgb">;
        r: z.ZodNumber;
        g: z.ZodNumber;
        b: z.ZodNumber;
        alpha: z.ZodNumber;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    }, {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    }>]>>;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "var";
    value: string;
    fallback?: {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    } | {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    } | undefined;
    hidden?: boolean | undefined;
}, {
    type: "var";
    value: string;
    fallback?: {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    } | {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    } | undefined;
    hidden?: boolean | undefined;
}>]>;
export type LayerValueItem = z.infer<typeof LayerValueItem>;
export declare const LayersValue: z.ZodObject<{
    type: z.ZodLiteral<"layers">;
    value: z.ZodArray<z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"unit">;
        unit: z.ZodType<"number" | GeneratedUnit, z.ZodTypeDef, "number" | GeneratedUnit>;
        value: z.ZodNumber;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    }, {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"keyword">;
        value: z.ZodString;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    }, {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"unparsed">;
        value: z.ZodString;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    }, {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"image">;
        value: z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"asset">;
            value: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            type: "asset";
            value: string;
        }, {
            type: "asset";
            value: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"url">;
            url: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            type: "url";
            url: string;
        }, {
            type: "url";
            url: string;
        }>]>;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "image";
        value: {
            type: "asset";
            value: string;
        } | {
            type: "url";
            url: string;
        };
        hidden?: boolean | undefined;
    }, {
        type: "image";
        value: {
            type: "asset";
            value: string;
        } | {
            type: "url";
            url: string;
        };
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"tuple">;
        value: z.ZodArray<z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"unit">;
            unit: z.ZodType<"number" | GeneratedUnit, z.ZodTypeDef, "number" | GeneratedUnit>;
            value: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        }, {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"keyword">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        }, {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unparsed">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        }, {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"image">;
            value: z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"asset">;
                value: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                type: "asset";
                value: string;
            }, {
                type: "asset";
                value: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"url">;
                url: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                type: "url";
                url: string;
            }, {
                type: "url";
                url: string;
            }>]>;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "image";
            value: {
                type: "asset";
                value: string;
            } | {
                type: "url";
                url: string;
            };
            hidden?: boolean | undefined;
        }, {
            type: "image";
            value: {
                type: "asset";
                value: string;
            } | {
                type: "url";
                url: string;
            };
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"rgb">;
            r: z.ZodNumber;
            g: z.ZodNumber;
            b: z.ZodNumber;
            alpha: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }>, z.ZodType<{
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        }, z.ZodTypeDef, {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"var">;
            value: z.ZodString;
            fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"unparsed">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                type: "unparsed";
                value: string;
                hidden?: boolean | undefined;
            }, {
                type: "unparsed";
                value: string;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"keyword">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                type: "keyword";
                value: string;
                hidden?: boolean | undefined;
            }, {
                type: "keyword";
                value: string;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unit">;
                unit: z.ZodType<"number" | GeneratedUnit, z.ZodTypeDef, "number" | GeneratedUnit>;
                value: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                type: "unit";
                value: number;
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            }, {
                type: "unit";
                value: number;
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"rgb">;
                r: z.ZodNumber;
                g: z.ZodNumber;
                b: z.ZodNumber;
                alpha: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }>]>>;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "var";
            value: string;
            fallback?: {
                type: "unit";
                value: number;
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                type: "keyword";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "unparsed";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        }, {
            type: "var";
            value: string;
            fallback?: {
                type: "unit";
                value: number;
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                type: "keyword";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "unparsed";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        }>]>, "many">;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "tuple";
        value: ({
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        } | {
            type: "image";
            value: {
                type: "asset";
                value: string;
            } | {
                type: "url";
                url: string;
            };
            hidden?: boolean | undefined;
        } | {
            type: "var";
            value: string;
            fallback?: {
                type: "unit";
                value: number;
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                type: "keyword";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "unparsed";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        })[];
        hidden?: boolean | undefined;
    }, {
        type: "tuple";
        value: ({
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        } | {
            type: "image";
            value: {
                type: "asset";
                value: string;
            } | {
                type: "url";
                url: string;
            };
            hidden?: boolean | undefined;
        } | {
            type: "var";
            value: string;
            fallback?: {
                type: "unit";
                value: number;
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                type: "keyword";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "unparsed";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        })[];
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"rgb">;
        r: z.ZodNumber;
        g: z.ZodNumber;
        b: z.ZodNumber;
        alpha: z.ZodNumber;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    }, {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"invalid">;
        value: z.ZodString;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "invalid";
        value: string;
        hidden?: boolean | undefined;
    }, {
        type: "invalid";
        value: string;
        hidden?: boolean | undefined;
    }>, z.ZodType<{
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    }, z.ZodTypeDef, {
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"var">;
        value: z.ZodString;
        fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"unparsed">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        }, {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"keyword">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        }, {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unit">;
            unit: z.ZodType<"number" | GeneratedUnit, z.ZodTypeDef, "number" | GeneratedUnit>;
            value: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        }, {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"rgb">;
            r: z.ZodNumber;
            g: z.ZodNumber;
            b: z.ZodNumber;
            alpha: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }>]>>;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "var";
        value: string;
        fallback?: {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    }, {
        type: "var";
        value: string;
        fallback?: {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    }>]>, "many">;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "layers";
    value: ({
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    } | {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    } | {
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    } | {
        type: "image";
        value: {
            type: "asset";
            value: string;
        } | {
            type: "url";
            url: string;
        };
        hidden?: boolean | undefined;
    } | {
        type: "var";
        value: string;
        fallback?: {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    } | {
        type: "tuple";
        value: ({
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        } | {
            type: "image";
            value: {
                type: "asset";
                value: string;
            } | {
                type: "url";
                url: string;
            };
            hidden?: boolean | undefined;
        } | {
            type: "var";
            value: string;
            fallback?: {
                type: "unit";
                value: number;
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                type: "keyword";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "unparsed";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        })[];
        hidden?: boolean | undefined;
    } | {
        type: "invalid";
        value: string;
        hidden?: boolean | undefined;
    })[];
    hidden?: boolean | undefined;
}, {
    type: "layers";
    value: ({
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    } | {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    } | {
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    } | {
        type: "image";
        value: {
            type: "asset";
            value: string;
        } | {
            type: "url";
            url: string;
        };
        hidden?: boolean | undefined;
    } | {
        type: "var";
        value: string;
        fallback?: {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    } | {
        type: "tuple";
        value: ({
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        } | {
            type: "image";
            value: {
                type: "asset";
                value: string;
            } | {
                type: "url";
                url: string;
            };
            hidden?: boolean | undefined;
        } | {
            type: "var";
            value: string;
            fallback?: {
                type: "unit";
                value: number;
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                type: "keyword";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "unparsed";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        })[];
        hidden?: boolean | undefined;
    } | {
        type: "invalid";
        value: string;
        hidden?: boolean | undefined;
    })[];
    hidden?: boolean | undefined;
}>;
export type LayersValue = z.infer<typeof LayersValue>;
export declare const StyleValue: z.ZodUnion<[z.ZodObject<{
    type: z.ZodLiteral<"image">;
    value: z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"asset">;
        value: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: "asset";
        value: string;
    }, {
        type: "asset";
        value: string;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"url">;
        url: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: "url";
        url: string;
    }, {
        type: "url";
        url: string;
    }>]>;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "image";
    value: {
        type: "asset";
        value: string;
    } | {
        type: "url";
        url: string;
    };
    hidden?: boolean | undefined;
}, {
    type: "image";
    value: {
        type: "asset";
        value: string;
    } | {
        type: "url";
        url: string;
    };
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"layers">;
    value: z.ZodArray<z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"unit">;
        unit: z.ZodType<"number" | GeneratedUnit, z.ZodTypeDef, "number" | GeneratedUnit>;
        value: z.ZodNumber;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    }, {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"keyword">;
        value: z.ZodString;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    }, {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"unparsed">;
        value: z.ZodString;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    }, {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"image">;
        value: z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"asset">;
            value: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            type: "asset";
            value: string;
        }, {
            type: "asset";
            value: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"url">;
            url: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            type: "url";
            url: string;
        }, {
            type: "url";
            url: string;
        }>]>;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "image";
        value: {
            type: "asset";
            value: string;
        } | {
            type: "url";
            url: string;
        };
        hidden?: boolean | undefined;
    }, {
        type: "image";
        value: {
            type: "asset";
            value: string;
        } | {
            type: "url";
            url: string;
        };
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"tuple">;
        value: z.ZodArray<z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"unit">;
            unit: z.ZodType<"number" | GeneratedUnit, z.ZodTypeDef, "number" | GeneratedUnit>;
            value: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        }, {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"keyword">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        }, {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unparsed">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        }, {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"image">;
            value: z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"asset">;
                value: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                type: "asset";
                value: string;
            }, {
                type: "asset";
                value: string;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"url">;
                url: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                type: "url";
                url: string;
            }, {
                type: "url";
                url: string;
            }>]>;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "image";
            value: {
                type: "asset";
                value: string;
            } | {
                type: "url";
                url: string;
            };
            hidden?: boolean | undefined;
        }, {
            type: "image";
            value: {
                type: "asset";
                value: string;
            } | {
                type: "url";
                url: string;
            };
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"rgb">;
            r: z.ZodNumber;
            g: z.ZodNumber;
            b: z.ZodNumber;
            alpha: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }>, z.ZodType<{
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        }, z.ZodTypeDef, {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"var">;
            value: z.ZodString;
            fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                type: z.ZodLiteral<"unparsed">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                type: "unparsed";
                value: string;
                hidden?: boolean | undefined;
            }, {
                type: "unparsed";
                value: string;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"keyword">;
                value: z.ZodString;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                type: "keyword";
                value: string;
                hidden?: boolean | undefined;
            }, {
                type: "keyword";
                value: string;
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"unit">;
                unit: z.ZodType<"number" | GeneratedUnit, z.ZodTypeDef, "number" | GeneratedUnit>;
                value: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                type: "unit";
                value: number;
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            }, {
                type: "unit";
                value: number;
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            }>, z.ZodObject<{
                type: z.ZodLiteral<"rgb">;
                r: z.ZodNumber;
                g: z.ZodNumber;
                b: z.ZodNumber;
                alpha: z.ZodNumber;
                hidden: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }, {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            }>]>>;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "var";
            value: string;
            fallback?: {
                type: "unit";
                value: number;
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                type: "keyword";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "unparsed";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        }, {
            type: "var";
            value: string;
            fallback?: {
                type: "unit";
                value: number;
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                type: "keyword";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "unparsed";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        }>]>, "many">;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "tuple";
        value: ({
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        } | {
            type: "image";
            value: {
                type: "asset";
                value: string;
            } | {
                type: "url";
                url: string;
            };
            hidden?: boolean | undefined;
        } | {
            type: "var";
            value: string;
            fallback?: {
                type: "unit";
                value: number;
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                type: "keyword";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "unparsed";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        })[];
        hidden?: boolean | undefined;
    }, {
        type: "tuple";
        value: ({
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        } | {
            type: "image";
            value: {
                type: "asset";
                value: string;
            } | {
                type: "url";
                url: string;
            };
            hidden?: boolean | undefined;
        } | {
            type: "var";
            value: string;
            fallback?: {
                type: "unit";
                value: number;
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                type: "keyword";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "unparsed";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        })[];
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"rgb">;
        r: z.ZodNumber;
        g: z.ZodNumber;
        b: z.ZodNumber;
        alpha: z.ZodNumber;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    }, {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"invalid">;
        value: z.ZodString;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "invalid";
        value: string;
        hidden?: boolean | undefined;
    }, {
        type: "invalid";
        value: string;
        hidden?: boolean | undefined;
    }>, z.ZodType<{
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    }, z.ZodTypeDef, {
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"var">;
        value: z.ZodString;
        fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"unparsed">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        }, {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"keyword">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        }, {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unit">;
            unit: z.ZodType<"number" | GeneratedUnit, z.ZodTypeDef, "number" | GeneratedUnit>;
            value: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        }, {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"rgb">;
            r: z.ZodNumber;
            g: z.ZodNumber;
            b: z.ZodNumber;
            alpha: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }>]>>;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "var";
        value: string;
        fallback?: {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    }, {
        type: "var";
        value: string;
        fallback?: {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    }>]>, "many">;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "layers";
    value: ({
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    } | {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    } | {
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    } | {
        type: "image";
        value: {
            type: "asset";
            value: string;
        } | {
            type: "url";
            url: string;
        };
        hidden?: boolean | undefined;
    } | {
        type: "var";
        value: string;
        fallback?: {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    } | {
        type: "tuple";
        value: ({
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        } | {
            type: "image";
            value: {
                type: "asset";
                value: string;
            } | {
                type: "url";
                url: string;
            };
            hidden?: boolean | undefined;
        } | {
            type: "var";
            value: string;
            fallback?: {
                type: "unit";
                value: number;
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                type: "keyword";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "unparsed";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        })[];
        hidden?: boolean | undefined;
    } | {
        type: "invalid";
        value: string;
        hidden?: boolean | undefined;
    })[];
    hidden?: boolean | undefined;
}, {
    type: "layers";
    value: ({
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    } | {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    } | {
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    } | {
        type: "image";
        value: {
            type: "asset";
            value: string;
        } | {
            type: "url";
            url: string;
        };
        hidden?: boolean | undefined;
    } | {
        type: "var";
        value: string;
        fallback?: {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    } | {
        type: "tuple";
        value: ({
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | {
            type: "function";
            name: string;
            args: StyleValue;
            hidden?: boolean;
        } | {
            type: "image";
            value: {
                type: "asset";
                value: string;
            } | {
                type: "url";
                url: string;
            };
            hidden?: boolean | undefined;
        } | {
            type: "var";
            value: string;
            fallback?: {
                type: "unit";
                value: number;
                unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
                hidden?: boolean | undefined;
            } | {
                type: "keyword";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "unparsed";
                value: string;
                hidden?: boolean | undefined;
            } | {
                type: "rgb";
                r: number;
                g: number;
                b: number;
                alpha: number;
                hidden?: boolean | undefined;
            } | undefined;
            hidden?: boolean | undefined;
        })[];
        hidden?: boolean | undefined;
    } | {
        type: "invalid";
        value: string;
        hidden?: boolean | undefined;
    })[];
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"unit">;
    unit: z.ZodType<"number" | GeneratedUnit, z.ZodTypeDef, "number" | GeneratedUnit>;
    value: z.ZodNumber;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "unit";
    value: number;
    unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
    hidden?: boolean | undefined;
}, {
    type: "unit";
    value: number;
    unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"keyword">;
    value: z.ZodString;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "keyword";
    value: string;
    hidden?: boolean | undefined;
}, {
    type: "keyword";
    value: string;
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"fontFamily">;
    value: z.ZodArray<z.ZodString, "many">;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "fontFamily";
    value: string[];
    hidden?: boolean | undefined;
}, {
    type: "fontFamily";
    value: string[];
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"rgb">;
    r: z.ZodNumber;
    g: z.ZodNumber;
    b: z.ZodNumber;
    alpha: z.ZodNumber;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "rgb";
    r: number;
    g: number;
    b: number;
    alpha: number;
    hidden?: boolean | undefined;
}, {
    type: "rgb";
    r: number;
    g: number;
    b: number;
    alpha: number;
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"unparsed">;
    value: z.ZodString;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "unparsed";
    value: string;
    hidden?: boolean | undefined;
}, {
    type: "unparsed";
    value: string;
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"tuple">;
    value: z.ZodArray<z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"unit">;
        unit: z.ZodType<"number" | GeneratedUnit, z.ZodTypeDef, "number" | GeneratedUnit>;
        value: z.ZodNumber;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    }, {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"keyword">;
        value: z.ZodString;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    }, {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"unparsed">;
        value: z.ZodString;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    }, {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"image">;
        value: z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"asset">;
            value: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            type: "asset";
            value: string;
        }, {
            type: "asset";
            value: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"url">;
            url: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            type: "url";
            url: string;
        }, {
            type: "url";
            url: string;
        }>]>;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "image";
        value: {
            type: "asset";
            value: string;
        } | {
            type: "url";
            url: string;
        };
        hidden?: boolean | undefined;
    }, {
        type: "image";
        value: {
            type: "asset";
            value: string;
        } | {
            type: "url";
            url: string;
        };
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"rgb">;
        r: z.ZodNumber;
        g: z.ZodNumber;
        b: z.ZodNumber;
        alpha: z.ZodNumber;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    }, {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    }>, z.ZodType<{
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    }, z.ZodTypeDef, {
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"var">;
        value: z.ZodString;
        fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            type: z.ZodLiteral<"unparsed">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        }, {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"keyword">;
            value: z.ZodString;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        }, {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"unit">;
            unit: z.ZodType<"number" | GeneratedUnit, z.ZodTypeDef, "number" | GeneratedUnit>;
            value: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        }, {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"rgb">;
            r: z.ZodNumber;
            g: z.ZodNumber;
            b: z.ZodNumber;
            alpha: z.ZodNumber;
            hidden: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }, {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        }>]>>;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "var";
        value: string;
        fallback?: {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    }, {
        type: "var";
        value: string;
        fallback?: {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    }>]>, "many">;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "tuple";
    value: ({
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    } | {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    } | {
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    } | {
        type: "image";
        value: {
            type: "asset";
            value: string;
        } | {
            type: "url";
            url: string;
        };
        hidden?: boolean | undefined;
    } | {
        type: "var";
        value: string;
        fallback?: {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    })[];
    hidden?: boolean | undefined;
}, {
    type: "tuple";
    value: ({
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    } | {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    } | {
        type: "function";
        name: string;
        args: StyleValue;
        hidden?: boolean;
    } | {
        type: "image";
        value: {
            type: "asset";
            value: string;
        } | {
            type: "url";
            url: string;
        };
        hidden?: boolean | undefined;
    } | {
        type: "var";
        value: string;
        fallback?: {
            type: "unit";
            value: number;
            unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
            hidden?: boolean | undefined;
        } | {
            type: "keyword";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "unparsed";
            value: string;
            hidden?: boolean | undefined;
        } | {
            type: "rgb";
            r: number;
            g: number;
            b: number;
            alpha: number;
            hidden?: boolean | undefined;
        } | undefined;
        hidden?: boolean | undefined;
    })[];
    hidden?: boolean | undefined;
}>, z.ZodType<{
    type: "function";
    name: string;
    args: StyleValue;
    hidden?: boolean;
}, z.ZodTypeDef, {
    type: "function";
    name: string;
    args: StyleValue;
    hidden?: boolean;
}>, z.ZodObject<{
    type: z.ZodLiteral<"guaranteedInvalid">;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "guaranteedInvalid";
    hidden?: boolean | undefined;
}, {
    type: "guaranteedInvalid";
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"invalid">;
    value: z.ZodString;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "invalid";
    value: string;
    hidden?: boolean | undefined;
}, {
    type: "invalid";
    value: string;
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"unset">;
    value: z.ZodLiteral<"">;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "unset";
    value: "";
    hidden?: boolean | undefined;
}, {
    type: "unset";
    value: "";
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"var">;
    value: z.ZodString;
    fallback: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"unparsed">;
        value: z.ZodString;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    }, {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"keyword">;
        value: z.ZodString;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    }, {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"unit">;
        unit: z.ZodType<"number" | GeneratedUnit, z.ZodTypeDef, "number" | GeneratedUnit>;
        value: z.ZodNumber;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    }, {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"rgb">;
        r: z.ZodNumber;
        g: z.ZodNumber;
        b: z.ZodNumber;
        alpha: z.ZodNumber;
        hidden: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    }, {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    }>]>>;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    type: "var";
    value: string;
    fallback?: {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    } | {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    } | undefined;
    hidden?: boolean | undefined;
}, {
    type: "var";
    value: string;
    fallback?: {
        type: "unit";
        value: number;
        unit: "number" | "%" | "deg" | "grad" | "rad" | "turn" | "db" | "fr" | "hz" | "khz" | "cm" | "mm" | "q" | "in" | "pt" | "pc" | "px" | "em" | "rem" | "ex" | "rex" | "cap" | "rcap" | "ch" | "rch" | "ic" | "ric" | "lh" | "rlh" | "vw" | "svw" | "lvw" | "dvw" | "vh" | "svh" | "lvh" | "dvh" | "vi" | "svi" | "lvi" | "dvi" | "vb" | "svb" | "lvb" | "dvb" | "vmin" | "svmin" | "lvmin" | "dvmin" | "vmax" | "svmax" | "lvmax" | "dvmax" | "cqw" | "cqh" | "cqi" | "cqb" | "cqmin" | "cqmax" | "dpi" | "dpcm" | "dppx" | "x" | "st" | "s" | "ms";
        hidden?: boolean | undefined;
    } | {
        type: "keyword";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "unparsed";
        value: string;
        hidden?: boolean | undefined;
    } | {
        type: "rgb";
        r: number;
        g: number;
        b: number;
        alpha: number;
        hidden?: boolean | undefined;
    } | undefined;
    hidden?: boolean | undefined;
}>]>;
export type StyleValue = z.infer<typeof StyleValue>;
export type Style = {
    [property in StyleProperty]?: StyleValue;
} & {
    [property: CustomProperty]: StyleValue;
};
export {};
