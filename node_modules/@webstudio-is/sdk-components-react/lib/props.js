// src/slot.ws.ts
import { SlotComponentIcon } from "@webstudio-is/icons/svg";
var propsMeta = {
  props: {}
};

// src/fragment.ws.ts
var propsMeta2 = {
  props: {}
};

// src/html-embed.ws.ts
import { EmbedIcon } from "@webstudio-is/icons/svg";

// src/__generated__/html-embed.props.ts
var props = {
  className: { required: false, control: "text", type: "string" },
  clientOnly: { required: false, control: "boolean", type: "boolean" },
  code: { required: true, control: "text", type: "string" },
  executeScriptOnCanvas: {
    required: false,
    control: "boolean",
    type: "boolean"
  }
};

// src/html-embed.ws.ts
var propsMeta3 = {
  props: {
    ...props,
    clientOnly: {
      ...props.clientOnly,
      description: "Activate it for any scripts that can mutate the DOM or introduce interactivity. This only affects the published site."
    },
    executeScriptOnCanvas: {
      ...props.executeScriptOnCanvas,
      label: "Run scripts on canvas",
      description: "Dangerously allow script execution on canvas without switching to preview mode. This only affects build mode, but may result in unwanted side effects inside builder!"
    },
    code: {
      required: true,
      control: "code",
      language: "html",
      type: "string"
    }
  },
  initialProps: ["className", "clientOnly", "executeScriptOnCanvas"]
};

// src/markdown-embed.ws.ts
import { MarkdownEmbedIcon } from "@webstudio-is/icons/svg";
import { imagePlaceholderDataUrl } from "@webstudio-is/image";
import {
  descendantComponent
} from "@webstudio-is/react-sdk";

// src/__generated__/markdown-embed.props.ts
var props2 = {
  className: { required: false, control: "text", type: "string" },
  code: { required: true, control: "text", type: "string" }
};

// src/markdown-embed.ws.ts
var markdownSample = `
# Styling Markdown with Markdown Embed

Markdown Embed allows styling of Markdown, which primarily comes from external data.

## How to Use Markdown Embed

- Every element is shown in the Navigator.
- Apply styles and Tokens to each element.
- Adjustments to elements apply universally within this embed, ensuring consistency across your content.

---

## This sample text contains all the elements that can be styled.

Any elements that were not used above are used below.

### Heading 3
#### Heading 4
##### Heading 5
###### Heading 6

[Links](#) connect your content to relevant resources.

**Bold text** makes your important points stand out.

*Italic text* is great for emphasizing terms.

1. First Step
2. Second Step

![Image placeholder](${imagePlaceholderDataUrl})

> Capture attention with a powerful quote.

Using \`console.log("Hello World");\` will log to the console.
`.trim();
var descendant = (label2, tag) => {
  return {
    type: "instance",
    component: descendantComponent,
    label: label2,
    props: [{ type: "string", name: "selector", value: ` ${tag}` }],
    children: []
  };
};
var meta = {
  category: "data",
  type: "embed",
  description: "Used to add markdown code to the page",
  icon: MarkdownEmbedIcon,
  presetStyle: {
    div: [
      {
        property: "display",
        value: { type: "keyword", value: "contents" }
      },
      {
        property: "whiteSpaceCollapse",
        value: { type: "keyword", value: "collapse" }
      }
    ]
  },
  order: 4,
  template: [
    {
      type: "instance",
      component: "MarkdownEmbed",
      props: [
        {
          name: "code",
          type: "string",
          value: markdownSample
        }
      ],
      children: [
        descendant("Paragraph", "p"),
        descendant("Heading 1", "h1"),
        descendant("Heading 2", "h2"),
        descendant("Heading 3", "h3"),
        descendant("Heading 4", "h4"),
        descendant("Heading 5", "h5"),
        descendant("Heading 6", "h6"),
        descendant("Bold", ":where(strong, b)"),
        descendant("Italic", ":where(em, i)"),
        descendant("Link", "a"),
        descendant("Image", "img"),
        descendant("Blockquote", "blockquote"),
        descendant("Code Text", "code"),
        descendant("List", ":where(ul, ol)"),
        descendant("List Item", "li"),
        descendant("Separator", "hr")
      ]
    }
  ]
};
var propsMeta4 = {
  props: {
    ...props2,
    code: {
      required: true,
      control: "code",
      language: "markdown",
      type: "string"
    }
  },
  initialProps: ["className"]
};

// src/body.ws.ts
import { BodyIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates
} from "@webstudio-is/react-sdk";
import { body } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/body.props.ts
var props3 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  nonce: { required: false, control: "text", type: "string" },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/body.ws.ts
var presetStyle = {
  body: [
    ...body,
    {
      property: "WebkitFontSmoothing",
      value: { type: "keyword", value: "antialiased" }
    },
    {
      property: "MozOsxFontSmoothing",
      value: { type: "keyword", value: "grayscale" }
    }
  ]
};
var propsMeta5 = {
  props: props3,
  initialProps: ["id", "className"]
};

// src/box.ws.ts
import { BoxIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates2
} from "@webstudio-is/react-sdk";
import {
  div,
  address,
  article,
  aside,
  figure,
  footer,
  header,
  main,
  nav,
  section
} from "@webstudio-is/sdk/normalize.css";

// src/__generated__/box.props.ts
var props4 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  nonce: { required: false, control: "text", type: "string" },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  tag: {
    description: "Use this property to change the HTML tag of this element to semantically structure and describe the content of a webpage. This can be important for accessibility tools and search engine optimization.",
    required: false,
    control: "select",
    type: "string",
    defaultValue: "div",
    options: [
      "div",
      "address",
      "article",
      "aside",
      "figure",
      "footer",
      "header",
      "main",
      "nav",
      "section"
    ]
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/box.ws.ts
var propsMeta6 = {
  props: props4,
  initialProps: ["id", "className", "tag"]
};

// src/text.ws.ts
import { TextIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates3
} from "@webstudio-is/react-sdk";
import { div as div2 } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/text.props.ts
var props5 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  nonce: { required: false, control: "text", type: "string" },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  tag: {
    description: "Use this property to change the HTML tag of this element to semantically structure and describe the content of a webpage. This can be important for accessibility tools and search engine optimization.",
    required: false,
    control: "select",
    type: "string",
    defaultValue: "div",
    options: ["div", "cite", "figcaption", "span"]
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/text.ws.ts
var presetStyle2 = {
  div: [
    ...div2,
    {
      property: "minHeight",
      value: { type: "unit", unit: "em", value: 1 }
    }
  ]
};
var propsMeta7 = {
  props: props5,
  initialProps: ["id", "className", "tag"]
};

// src/heading.ws.ts
import { HeadingIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates4
} from "@webstudio-is/react-sdk";
import { h1, h2, h3, h4, h5, h6 } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/heading.props.ts
var props6 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  nonce: { required: false, control: "text", type: "string" },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  tag: {
    description: "Use HTML heading levels (h1-h6) to structure content hierarchically, with h1 as the main title and subsequent levels representing sub-sections. Maintain a logical order and avoid skipping levels to ensure consistent and meaningful organization.",
    required: false,
    control: "select",
    type: "string",
    defaultValue: "h1",
    options: ["h1", "h2", "h3", "h4", "h5", "h6"]
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/heading.ws.ts
var propsMeta8 = {
  props: props6,
  initialProps: ["id", "className", "tag"]
};

// src/paragraph.ws.ts
import { TextAlignLeftIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates5
} from "@webstudio-is/react-sdk";
import { p } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/paragraph.props.ts
var props7 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  nonce: { required: false, control: "text", type: "string" },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/paragraph.ws.ts
var propsMeta9 = {
  props: props7,
  initialProps: ["id", "className"]
};

// src/link.ws.ts
import { LinkIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates6
} from "@webstudio-is/react-sdk";
import { a } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/link.props.ts
var props8 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  download: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that the hyperlink is to be used for downloading a resource."
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  href: {
    required: false,
    control: "text",
    type: "string",
    description: "The URL of a linked resource."
  },
  hrefLang: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the language of the linked resource."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  media: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies a hint of the media for which the linked resource was designed."
  },
  nonce: { required: false, control: "text", type: "string" },
  ping: {
    required: false,
    control: "text",
    type: "string",
    description: "The ping attribute specifies a space-separated list of URLs to be notified if a user follows the hyperlink."
  },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  referrerPolicy: {
    required: false,
    control: "select",
    type: "string",
    options: [
      "",
      "no-referrer",
      "no-referrer-when-downgrade",
      "origin",
      "origin-when-cross-origin",
      "same-origin",
      "strict-origin",
      "strict-origin-when-cross-origin",
      "unsafe-url"
    ],
    description: "Specifies which referrer is sent when fetching the resource."
  },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  target: {
    required: false,
    control: "select",
    type: "string",
    options: ["_self", "_blank", "_parent", "_top"],
    description: "Specifies where to open the linked document (in the case of an <a> element) or where to display the response received (in the case of a <form> element)"
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  type: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the type of the element."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/link.ws.ts
var presetStyle3 = {
  a: [
    ...a,
    {
      property: "minHeight",
      value: { type: "unit", unit: "em", value: 1 }
    },
    {
      property: "display",
      value: { type: "keyword", value: "inline-block" }
    }
  ]
};
var meta2 = {
  category: "general",
  type: "container",
  description: "Use a link to send your users to another page, section, or resource. Configure links in the Settings panel.",
  icon: LinkIcon,
  invalidAncestors: ["Link", "Button"],
  presetStyle: presetStyle3,
  order: 1,
  states: [
    ...defaultStates6,
    {
      selector: ":visited",
      label: "Visited"
    },
    {
      category: "component-states",
      selector: "[aria-current=page]",
      label: "Current page"
    }
  ],
  template: [
    {
      type: "instance",
      component: "Link",
      children: [
        {
          type: "text",
          value: "Link text you can edit",
          placeholder: true
        }
      ]
    }
  ]
};
var propsMeta10 = {
  props: {
    ...props8,
    href: {
      type: "string",
      control: "url",
      required: false
    }
  },
  initialProps: ["id", "className", "href", "target", "download"]
};

// src/rich-text-link.ws.ts
var meta3 = {
  ...meta2,
  category: "hidden",
  type: "rich-text-child",
  template: []
};
var propsMeta11 = propsMeta10;

// src/span.ws.ts
import { PaintBrushIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates7
} from "@webstudio-is/react-sdk";
import { span } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/span.props.ts
var props9 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  nonce: { required: false, control: "text", type: "string" },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/span.ws.ts
var propsMeta12 = {
  props: props9,
  initialProps: ["id", "className"]
};

// src/bold.ws.ts
import { BoldIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates8
} from "@webstudio-is/react-sdk";
import { b } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/bold.props.ts
var props10 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  nonce: { required: false, control: "text", type: "string" },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/bold.ws.ts
var propsMeta13 = {
  props: props10,
  initialProps: ["id", "className"]
};

// src/italic.ws.ts
import { TextItalicIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates9
} from "@webstudio-is/react-sdk";
import { i } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/italic.props.ts
var props11 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  nonce: { required: false, control: "text", type: "string" },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/italic.ws.ts
var presetStyle4 = {
  i: [
    ...i,
    {
      property: "fontStyle",
      value: { type: "keyword", value: "italic" }
    }
  ]
};
var propsMeta14 = {
  props: props11,
  initialProps: ["id", "className"]
};

// src/superscript.ws.ts
import { SuperscriptIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates10
} from "@webstudio-is/react-sdk";
import { sup } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/superscript.props.ts
var props12 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  nonce: { required: false, control: "text", type: "string" },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/superscript.ws.ts
var propsMeta15 = {
  props: props12,
  initialProps: ["id", "className"]
};

// src/subscript.ws.ts
import { SubscriptIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates11
} from "@webstudio-is/react-sdk";
import { sub } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/subscript.props.ts
var props13 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  nonce: { required: false, control: "text", type: "string" },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/subscript.ws.ts
var propsMeta16 = {
  props: props13,
  initialProps: ["id", "className"]
};

// src/button.ws.ts
import { ButtonElementIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates12
} from "@webstudio-is/react-sdk";
import { button } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/button.props.ts
var props14 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  disabled: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether the user can interact with the element."
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  form: {
    required: false,
    control: "text",
    type: "string",
    description: "Indicates the form that is the owner of the element."
  },
  formAction: {
    required: false,
    control: "text",
    type: "string",
    description: "Indicates the action of the element, overriding the action defined inthe form."
  },
  formEncType: {
    required: false,
    control: "text",
    type: "string",
    description: `If the button/input is a submit button (e.g. type="submit"), this attribute sets the encoding type to use during form submission. If this attribute is specified, it overrides theenctype attribute of the button's form owner.`
  },
  formMethod: {
    required: false,
    control: "text",
    type: "string",
    description: `If the button/input is a submit button (e.g. type="submit"), this attribute sets the submission method to use during form submission (GET, POST, etc.). If this attribute is specified, it overrides the method attribute of the button's form owner.`
  },
  formNoValidate: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: `If the button/input is a submit button (e.g. type="submit"), this boolean attribute specifies that the form is not to be validatedwhen it is submitted. If this attribute is specified, it overrides thenovalidate attribute of the button's form owner.`
  },
  formTarget: {
    required: false,
    control: "text",
    type: "string",
    description: `If the button/input is a submit button (e.g. type="submit"), this attribute specifies the browsing context (for example, tab, window, or inline frame) in which to display the response that is received aftersubmitting the form. If this attribute is specified, it overrides thetarget attribute of the button's form owner.`
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  name: {
    required: false,
    control: "text",
    type: "string",
    description: "This name is important when submitting form data to the server, as it identifies the data associated with the input. When multiple inputs share the same name attribute, they are treated as part of the same group (e.g., radio buttons or checkboxes)."
  },
  nonce: { required: false, control: "text", type: "string" },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  type: {
    required: false,
    control: "radio",
    type: "string",
    defaultValue: "submit",
    options: ["button", "submit", "reset"],
    description: "Defines the behavior of the button, such as submitting a form or resetting form fields."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  value: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines a default value which will be displayed in the element on pageload."
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/button.ws.ts
var presetStyle5 = {
  button
};
var meta4 = {
  category: "forms",
  type: "container",
  invalidAncestors: ["Button", "Link"],
  description: "Use a button to submit forms or trigger actions within a page. Do not use a button to navigate users to another resource or another page - that\u2019s what a link is used for.",
  icon: ButtonElementIcon,
  presetStyle: presetStyle5,
  states: [
    ...defaultStates12,
    { selector: ":disabled", label: "Disabled" },
    { selector: ":enabled", label: "Enabled" }
  ],
  order: 2,
  template: [
    {
      type: "instance",
      component: "Button",
      children: [
        {
          type: "text",
          value: "Button text you can edit",
          placeholder: true
        }
      ]
    }
  ]
};
var propsMeta17 = {
  props: props14,
  initialProps: ["id", "className", "type", "aria-label"]
};

// src/input.ws.ts
import { FormTextFieldIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates13
} from "@webstudio-is/react-sdk";
import { input } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/input.props.ts
var props15 = {
  about: { required: false, control: "text", type: "string" },
  accept: {
    required: false,
    control: "text",
    type: "string",
    description: "List of types the server accepts, typically a file type."
  },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  alt: {
    required: false,
    control: "text",
    type: "string",
    description: "Text description of the image, which is very important for accessibility and search engine optimization. Screen readers read this description to users so they know what the image means. Alt text is also displayed on the page if the image can't be loaded for some reason."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  checked: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether the element should be checked on page load."
  },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  disabled: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether the user can interact with the element."
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  enterKeyHint: {
    required: false,
    control: "select",
    type: "string",
    options: ["search", "enter", "done", "go", "next", "previous", "send"],
    description: "The enterkeyhint specifies what action label (or icon) to present for the enter key onvirtual keyboards. The attribute can be used with form controls (such asthe value of textarea elements), or in elements in anediting host (e.g., using contenteditable attribute)."
  },
  form: {
    required: false,
    control: "text",
    type: "string",
    description: "Indicates the form that is the owner of the element."
  },
  formAction: {
    required: false,
    control: "text",
    type: "string",
    description: "Indicates the action of the element, overriding the action defined inthe form."
  },
  formEncType: {
    required: false,
    control: "text",
    type: "string",
    description: `If the button/input is a submit button (e.g. type="submit"), this attribute sets the encoding type to use during form submission. If this attribute is specified, it overrides theenctype attribute of the button's form owner.`
  },
  formMethod: {
    required: false,
    control: "text",
    type: "string",
    description: `If the button/input is a submit button (e.g. type="submit"), this attribute sets the submission method to use during form submission (GET, POST, etc.). If this attribute is specified, it overrides the method attribute of the button's form owner.`
  },
  formNoValidate: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: `If the button/input is a submit button (e.g. type="submit"), this boolean attribute specifies that the form is not to be validatedwhen it is submitted. If this attribute is specified, it overrides thenovalidate attribute of the button's form owner.`
  },
  formTarget: {
    required: false,
    control: "text",
    type: "string",
    description: `If the button/input is a submit button (e.g. type="submit"), this attribute specifies the browsing context (for example, tab, window, or inline frame) in which to display the response that is received aftersubmitting the form. If this attribute is specified, it overrides thetarget attribute of the button's form owner.`
  },
  height: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the image\u2019s height in pixels."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "email",
      "tel",
      "url",
      "none",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  list: {
    required: false,
    control: "text",
    type: "string",
    description: "Identifies a list of pre-defined options to suggest to the user."
  },
  max: {
    required: false,
    control: "number",
    type: "number",
    description: "Indicates the maximum value allowed."
  },
  maxLength: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the maximum number of characters allowed in the element."
  },
  min: {
    required: false,
    control: "number",
    type: "number",
    description: "Indicates the minimum value allowed."
  },
  minLength: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the minimum number of characters allowed in the element."
  },
  multiple: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether multiple values can be entered in an input of the type email or file."
  },
  name: {
    required: false,
    control: "text",
    type: "string",
    description: "This name is important when submitting form data to the server, as it identifies the data associated with the input. When multiple inputs share the same name attribute, they are treated as part of the same group (e.g., radio buttons or checkboxes)."
  },
  nonce: { required: false, control: "text", type: "string" },
  pattern: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines a regular expression which the element's value will be validated against."
  },
  placeholder: {
    required: false,
    control: "text",
    type: "string",
    description: "Provides a hint to the user of what can be entered in the field."
  },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  readOnly: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether the element can be edited."
  },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  required: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether this form element must be filled before the form can be submitted."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  size: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the width of the element (in pixels). If the element'stype attribute is text or password then it's the number of characters."
  },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  src: {
    required: false,
    control: "text",
    type: "string",
    description: "The URL of the embeddable content."
  },
  step: { required: false, control: "number", type: "number" },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  type: {
    required: false,
    control: "select",
    type: "string",
    defaultValue: "text",
    options: [
      "number",
      "search",
      "time",
      "text",
      "hidden",
      "color",
      "date",
      "datetime-local",
      "email",
      "month",
      "password",
      "range",
      "tel",
      "url",
      "week"
    ],
    description: "Specifies the type of data that this input will accept and helps the browser provide appropriate validation and formatting for that input type."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "on"]
  },
  value: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines a default value which will be displayed in the element on pageload."
  },
  vocab: { required: false, control: "text", type: "string" },
  width: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the image\u2019s width in pixels."
  }
};

// src/input.ws.ts
var presetStyle6 = {
  input: [
    ...input,
    {
      property: "display",
      value: { type: "keyword", value: "block" }
    }
  ]
};
var meta5 = {
  category: "forms",
  invalidAncestors: ["Button", "Link"],
  type: "control",
  label: "Text Input",
  description: "A single-line text input for collecting string data from your users.",
  icon: FormTextFieldIcon,
  presetStyle: presetStyle6,
  order: 3,
  states: [
    ...defaultStates13,
    { selector: "::placeholder", label: "Placeholder" },
    { selector: ":valid", label: "Valid" },
    { selector: ":invalid", label: "Invalid" },
    { selector: ":required", label: "Required" },
    { selector: ":optional", label: "Optional" }
    // Additional states will go into submenu
    //{ selector: ":disabled", label: "Disabled" },
    //{ selector: ":enabled", label: "Enabled" },
    //{ selector: ":read-only", label: "Read Only" },
    //{ selector: ":read-write", label: "Read Write" },
  ]
};
var propsMeta18 = {
  props: props15,
  initialProps: [
    "id",
    "className",
    "name",
    "value",
    "type",
    "placeholder",
    "required",
    "autoFocus"
  ]
};

// src/form.ws.ts
import { FormIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates14
} from "@webstudio-is/react-sdk";
import { form } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/form.props.ts
var props16 = {
  about: { required: false, control: "text", type: "string" },
  acceptCharset: {
    required: false,
    control: "text",
    type: "string",
    description: "List of supported charsets."
  },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  action: {
    required: false,
    control: "text",
    type: "string",
    description: "The URI of a program that processes the information submitted via the form."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoComplete: {
    required: false,
    control: "text",
    type: "string",
    description: "Indicates whether controls in this form can by default have their valuesautomatically completed by the browser."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  encType: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the content type of the form data when themethod is POST."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  method: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines which HTTP method to use when submitting the form. Can be GET (default) or POST."
  },
  name: {
    required: false,
    control: "text",
    type: "string",
    description: "This name is important when submitting form data to the server, as it identifies the data associated with the input. When multiple inputs share the same name attribute, they are treated as part of the same group (e.g., radio buttons or checkboxes)."
  },
  nonce: { required: false, control: "text", type: "string" },
  noValidate: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "This attribute indicates that the form shouldn't be validated when submitted."
  },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  target: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies where to open the linked document (in the case of an <a> element) or where to display the response received (in the case of a <form> element)"
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/form.ws.ts
var presetStyle7 = {
  form: [
    ...form,
    { property: "minHeight", value: { type: "unit", unit: "px", value: 20 } }
  ]
};
var propsMeta19 = {
  props: props16,
  initialProps: ["id", "className", "action"]
};

// src/image.ws.ts
import { ImageIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates15
} from "@webstudio-is/react-sdk";
import { img } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/image.props.ts
var props17 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  alt: {
    required: false,
    control: "text",
    type: "string",
    description: "Text description of the image, which is very important for accessibility and search engine optimization. Screen readers read this description to users so they know what the image means. Alt text is also displayed on the page if the image can't be loaded for some reason."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  crossOrigin: {
    required: false,
    control: "radio",
    type: "string",
    options: ["", "anonymous", "use-credentials"],
    description: "How the element handles cross-origin requests"
  },
  datatype: { required: false, control: "text", type: "string" },
  decoding: {
    required: false,
    control: "radio",
    type: "string",
    options: ["async", "auto", "sync"],
    description: "Indicates the preferred method to decode the image."
  },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  fetchPriority: {
    required: false,
    control: "radio",
    type: "string",
    options: ["high", "low", "auto"]
  },
  height: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the image\u2019s height in pixels."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  loading: {
    required: false,
    control: "radio",
    type: "string",
    defaultValue: "lazy",
    options: ["eager", "lazy"],
    description: "Determines whether the image will load as soon as possible (Eager), or when it scrolls into view (Lazy). Lazy loading is a great option for pages with many images because it can significantly reduce the time it takes for the page to load initially."
  },
  nonce: { required: false, control: "text", type: "string" },
  optimize: {
    required: false,
    control: "boolean",
    type: "boolean",
    defaultValue: true
  },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  quality: { required: false, control: "number", type: "number" },
  radioGroup: { required: false, control: "text", type: "string" },
  referrerPolicy: {
    required: false,
    control: "select",
    type: "string",
    options: [
      "",
      "origin",
      "no-referrer",
      "no-referrer-when-downgrade",
      "origin-when-cross-origin",
      "same-origin",
      "strict-origin",
      "strict-origin-when-cross-origin",
      "unsafe-url"
    ],
    description: "Specifies which referrer is sent when fetching the resource."
  },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  sizes: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  src: {
    required: false,
    control: "text",
    type: "string",
    description: "The URL of the embeddable content."
  },
  srcSet: {
    required: false,
    control: "text",
    type: "string",
    description: "One or more responsive image candidates."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  useMap: { required: false, control: "text", type: "string" },
  vocab: { required: false, control: "text", type: "string" },
  width: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the image\u2019s width in pixels."
  }
};

// src/image.ws.ts
var presetStyle8 = {
  img: [
    ...img,
    // Otherwise on new image insert onto canvas it can overfit screen size multiple times
    {
      property: "maxWidth",
      value: { type: "unit", unit: "%", value: 100 }
    },
    // inline | inline-block is not suitable because without line-height: 0 on the parent you get unsuitable spaces/margins
    // see https://stackoverflow.com/questions/24771194/is-the-margin-of-inline-block-4px-is-static-for-all-browsers
    {
      property: "display",
      value: { type: "keyword", value: "block" }
    },
    // Set image height to "auto" to reduce layout shift, improving compatibility across browsers like Safari.
    // Unlike "fit-content," "auto" preserves the aspect ratio when the width exceeds max-width. (in Safari)
    // See https://web.dev/articles/optimize-cls#best_practice_for_setting_image_dimensions
    {
      property: "height",
      value: { type: "keyword", value: "auto" }
    }
  ]
};
var meta6 = {
  category: "media",
  type: "embed",
  description: "Add an image asset to the page. Webstudio automatically converts images to WebP or AVIF format and makes them responsive for best performance.",
  icon: ImageIcon,
  states: defaultStates15,
  presetStyle: presetStyle8,
  order: 0
};
var propsOverrides = {
  src: {
    type: "string",
    control: "file",
    label: "Source",
    required: false
  }
};
var optimize = props17.optimize;
optimize.description = "Optimize the image for enhanced performance.";
var propsMeta20 = {
  props: {
    ...props17,
    ...propsOverrides,
    optimize
  },
  initialProps: [
    "id",
    "className",
    "src",
    "width",
    "height",
    "alt",
    "loading",
    "optimize"
  ]
};

// src/blockquote.ws.ts
import { BlockquoteIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates16
} from "@webstudio-is/react-sdk";

// src/__generated__/blockquote.props.ts
var props18 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  cite: {
    required: false,
    control: "text",
    type: "string",
    description: "Contains a URI which points to the source of the quote or change."
  },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  nonce: { required: false, control: "text", type: "string" },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/blockquote.ws.ts
var propsMeta21 = {
  props: props18,
  initialProps: ["id", "className", "cite"]
};

// src/list.ws.ts
import { ListIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates17
} from "@webstudio-is/react-sdk";
import { ol, ul } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/list.props.ts
var props19 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  nonce: { required: false, control: "text", type: "string" },
  ordered: {
    description: "Shows numbers instead of bullets when toggled. See the \u201CList Style Type\u201D property under the \u201CList Item\u201D section in the Style panel for more options.",
    required: false,
    control: "boolean",
    type: "boolean",
    defaultValue: false
  },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  reversed: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether the list should be displayed in a descending order instead of an ascending order."
  },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  start: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the first number if other than 1."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  type: {
    required: false,
    control: "select",
    type: "string",
    options: ["a", "i", "1", "A", "I"],
    description: "Defines the type of the element."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/list.ws.ts
var presetStyle9 = {
  ol: [
    ...ol,
    {
      property: "marginTop",
      value: { type: "keyword", value: "0" }
    },
    {
      property: "marginBottom",
      value: { type: "keyword", value: "10px" }
    },
    {
      property: "paddingLeft",
      value: { type: "keyword", value: "40px" }
    }
  ],
  ul: [
    ...ul,
    {
      property: "marginTop",
      value: { type: "keyword", value: "0" }
    },
    {
      property: "marginBottom",
      value: { type: "keyword", value: "10px" }
    },
    {
      property: "paddingLeft",
      value: { type: "keyword", value: "40px" }
    }
  ]
};
var propsMeta22 = {
  props: props19,
  initialProps: ["id", "className", "ordered", "start", "reversed"]
};

// src/list-item.ws.ts
import { ListItemIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates18
} from "@webstudio-is/react-sdk";
import { li } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/list-item.props.ts
var props20 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  nonce: { required: false, control: "text", type: "string" },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  value: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines a default value which will be displayed in the element on pageload."
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/list-item.ws.ts
var propsMeta23 = {
  props: props20,
  initialProps: ["id", "className"]
};

// src/separator.ws.ts
import { DashIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates19
} from "@webstudio-is/react-sdk";
import { hr } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/separator.props.ts
var props21 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  nonce: { required: false, control: "text", type: "string" },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/separator.ws.ts
var presetStyle10 = {
  hr: [
    ...hr,
    {
      property: "height",
      value: { type: "keyword", value: "1px" }
    },
    {
      property: "backgroundColor",
      value: { type: "keyword", value: "gray" }
    },
    {
      property: "borderTopStyle",
      value: { type: "keyword", value: "none" }
    },
    {
      property: "borderRightStyle",
      value: { type: "keyword", value: "none" }
    },
    {
      property: "borderLeftStyle",
      value: { type: "keyword", value: "none" }
    },
    {
      property: "borderBottomStyle",
      value: { type: "keyword", value: "none" }
    }
  ]
};
var propsMeta24 = {
  props: props21,
  initialProps: ["id", "className"]
};

// src/code-text.ws.ts
import { CodeTextIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates20
} from "@webstudio-is/react-sdk";
import { code } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/code-text.props.ts
var props22 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  code: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  nonce: { required: false, control: "text", type: "string" },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/code-text.ws.ts
var presetStyle11 = {
  code: [
    ...code,
    {
      property: "display",
      value: { type: "keyword", value: "block" }
    },
    {
      property: "whiteSpaceCollapse",
      value: { type: "keyword", value: "preserve" }
    },
    {
      property: "textWrapMode",
      value: { type: "keyword", value: "wrap" }
    },
    {
      property: "paddingLeft",
      value: { type: "unit", value: 0.2, unit: "em" }
    },
    {
      property: "paddingRight",
      value: { type: "unit", value: 0.2, unit: "em" }
    },
    {
      property: "backgroundColor",
      value: { type: "rgb", r: 238, g: 238, b: 238, alpha: 1 }
    }
  ]
};
var propsMeta25 = {
  props: {
    ...props22,
    code: {
      required: true,
      control: "codetext",
      type: "string"
    }
  },
  initialProps: ["id", "className", "lang", "code"]
};

// src/label.ws.ts
import { LabelIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates21
} from "@webstudio-is/react-sdk";
import { label } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/label.props.ts
var props23 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  form: {
    required: false,
    control: "text",
    type: "string",
    description: "Indicates the form that is the owner of the element."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  htmlFor: {
    required: false,
    control: "text",
    type: "string",
    description: "Associates this Label with an Input. The value of the \u201CFor\u201D attribute should match the ID attribute of the corresponding Input element"
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  nonce: { required: false, control: "text", type: "string" },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/label.ws.ts
var presetStyle12 = {
  label: [
    ...label,
    { property: "display", value: { type: "keyword", value: "block" } }
  ]
};
var propsMeta26 = {
  props: {
    ...props23,
    htmlFor: {
      ...props23.htmlFor,
      label: "For"
    }
  },
  initialProps: ["id", "className", "htmlFor"]
};

// src/textarea.ws.ts
import { FormTextAreaIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates22
} from "@webstudio-is/react-sdk";
import { textarea } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/textarea.props.ts
var props24 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoComplete: {
    required: false,
    control: "text",
    type: "string",
    description: "Indicates whether controls in this form can by default have their valuesautomatically completed by the browser."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  cols: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the number of columns in a textarea."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  dirName: { required: false, control: "text", type: "string" },
  disabled: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether the user can interact with the element."
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  form: {
    required: false,
    control: "text",
    type: "string",
    description: "Indicates the form that is the owner of the element."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  maxLength: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the maximum number of characters allowed in the element."
  },
  minLength: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the minimum number of characters allowed in the element."
  },
  name: {
    required: false,
    control: "text",
    type: "string",
    description: "This name is important when submitting form data to the server, as it identifies the data associated with the input. When multiple inputs share the same name attribute, they are treated as part of the same group (e.g., radio buttons or checkboxes)."
  },
  nonce: { required: false, control: "text", type: "string" },
  placeholder: {
    required: false,
    control: "text",
    type: "string",
    description: "Provides a hint to the user of what can be entered in the field."
  },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  readOnly: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether the element can be edited."
  },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  required: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether this form element must be filled before the form can be submitted."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  rows: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the number of rows in a text area."
  },
  security: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  value: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines a default value which will be displayed in the element on pageload."
  },
  vocab: { required: false, control: "text", type: "string" },
  wrap: {
    required: false,
    control: "text",
    type: "string",
    description: "Indicates whether the text should be wrapped."
  }
};

// src/textarea.ws.ts
var presetStyle13 = {
  textarea: [
    ...textarea,
    // resize doesn't work well while on canvas
    { property: "resize", value: { type: "keyword", value: "none" } },
    {
      property: "display",
      value: { type: "keyword", value: "block" }
    }
  ]
};
var meta7 = {
  category: "forms",
  type: "control",
  label: "Text Area",
  description: "A multi-line text input for collecting longer string data from your users.",
  icon: FormTextAreaIcon,
  presetStyle: presetStyle13,
  order: 4,
  invalidAncestors: ["Button", "Link"],
  states: [
    ...defaultStates22,
    { selector: "::placeholder", label: "Placeholder" },
    { selector: ":valid", label: "Valid" },
    { selector: ":invalid", label: "Invalid" },
    { selector: ":required", label: "Required" },
    { selector: ":optional", label: "Optional" }
    // Additional states will go into submenu
    //{ selector: ":disabled", label: "Disabled" },
    //{ selector: ":enabled", label: "Enabled" },
    //{ selector: ":read-only", label: "Read Only" },
    //{ selector: ":read-write", label: "Read Write" },
  ]
};
var propsMeta27 = {
  props: props24,
  initialProps: [
    "id",
    "className",
    "name",
    "value",
    "placeholder",
    "required",
    "autoFocus"
  ]
};

// src/radio-button.ws.ts
import { RadioCheckedIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates23
} from "@webstudio-is/react-sdk";
import { radio } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/radio-button.props.ts
var props25 = {
  about: { required: false, control: "text", type: "string" },
  accept: {
    required: false,
    control: "text",
    type: "string",
    description: "List of types the server accepts, typically a file type."
  },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  alt: {
    required: false,
    control: "text",
    type: "string",
    description: "Text description of the image, which is very important for accessibility and search engine optimization. Screen readers read this description to users so they know what the image means. Alt text is also displayed on the page if the image can't be loaded for some reason."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  checked: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether the element should be checked on page load."
  },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  disabled: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether the user can interact with the element."
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  enterKeyHint: {
    required: false,
    control: "select",
    type: "string",
    options: ["search", "enter", "done", "go", "next", "previous", "send"],
    description: "The enterkeyhint specifies what action label (or icon) to present for the enter key onvirtual keyboards. The attribute can be used with form controls (such asthe value of textarea elements), or in elements in anediting host (e.g., using contenteditable attribute)."
  },
  form: {
    required: false,
    control: "text",
    type: "string",
    description: "Indicates the form that is the owner of the element."
  },
  formAction: {
    required: false,
    control: "text",
    type: "string",
    description: "Indicates the action of the element, overriding the action defined inthe form."
  },
  formEncType: {
    required: false,
    control: "text",
    type: "string",
    description: `If the button/input is a submit button (e.g. type="submit"), this attribute sets the encoding type to use during form submission. If this attribute is specified, it overrides theenctype attribute of the button's form owner.`
  },
  formMethod: {
    required: false,
    control: "text",
    type: "string",
    description: `If the button/input is a submit button (e.g. type="submit"), this attribute sets the submission method to use during form submission (GET, POST, etc.). If this attribute is specified, it overrides the method attribute of the button's form owner.`
  },
  formNoValidate: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: `If the button/input is a submit button (e.g. type="submit"), this boolean attribute specifies that the form is not to be validatedwhen it is submitted. If this attribute is specified, it overrides thenovalidate attribute of the button's form owner.`
  },
  formTarget: {
    required: false,
    control: "text",
    type: "string",
    description: `If the button/input is a submit button (e.g. type="submit"), this attribute specifies the browsing context (for example, tab, window, or inline frame) in which to display the response that is received aftersubmitting the form. If this attribute is specified, it overrides thetarget attribute of the button's form owner.`
  },
  height: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the image\u2019s height in pixels."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "email",
      "tel",
      "none",
      "url",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  list: {
    required: false,
    control: "text",
    type: "string",
    description: "Identifies a list of pre-defined options to suggest to the user."
  },
  max: {
    required: false,
    control: "number",
    type: "number",
    description: "Indicates the maximum value allowed."
  },
  maxLength: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the maximum number of characters allowed in the element."
  },
  min: {
    required: false,
    control: "number",
    type: "number",
    description: "Indicates the minimum value allowed."
  },
  minLength: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the minimum number of characters allowed in the element."
  },
  multiple: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether multiple values can be entered in an input of the type email or file."
  },
  name: {
    required: false,
    control: "text",
    type: "string",
    description: "This name is important when submitting form data to the server, as it identifies the data associated with the input. When multiple inputs share the same name attribute, they are treated as part of the same group (e.g., radio buttons or checkboxes)."
  },
  nonce: { required: false, control: "text", type: "string" },
  pattern: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines a regular expression which the element's value will be validated against."
  },
  placeholder: {
    required: false,
    control: "text",
    type: "string",
    description: "Provides a hint to the user of what can be entered in the field."
  },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  readOnly: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether the element can be edited."
  },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  required: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether this form element must be filled before the form can be submitted."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  size: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the width of the element (in pixels). If the element'stype attribute is text or password then it's the number of characters."
  },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  src: {
    required: false,
    control: "text",
    type: "string",
    description: "The URL of the embeddable content."
  },
  step: { required: false, control: "number", type: "number" },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "on"]
  },
  value: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines a default value which will be displayed in the element on pageload."
  },
  vocab: { required: false, control: "text", type: "string" },
  width: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the image\u2019s width in pixels."
  }
};

// src/radio-button.ws.ts
var presetStyle14 = {
  input: [
    ...radio,
    {
      property: "marginRight",
      value: { type: "unit", unit: "em", value: 0.5 }
    }
  ]
};
var meta8 = {
  category: "forms",
  invalidAncestors: ["Button", "Link"],
  type: "control",
  label: "Radio",
  description: "Use within a form to allow your users to select a single option from a set of mutually exclusive choices. Group multiple radios by matching their \u201CName\u201D properties.",
  icon: RadioCheckedIcon,
  presetStyle: presetStyle14,
  order: 5,
  states: [
    ...defaultStates23,
    { selector: ":checked", label: "Checked" },
    { selector: ":required", label: "Required" },
    { selector: ":optional", label: "Optional" }
    // Additional states will go into submenu
    //{ selector: ":disabled", label: "Disabled" },
    //{ selector: ":enabled", label: "Enabled" },
    //{ selector: ":read-only", label: "Read Only" },
    //{ selector: ":read-write", label: "Read Write" },
  ],
  template: [
    {
      type: "instance",
      component: "Label",
      label: "Radio Field",
      children: [
        { type: "instance", component: "RadioButton", props: [], children: [] },
        {
          type: "instance",
          component: "Text",
          label: "Radio Label",
          props: [{ type: "string", name: "tag", value: "span" }],
          children: [{ type: "text", value: "Radio", placeholder: true }]
        }
      ]
    }
  ]
};
var propsMeta28 = {
  props: props25,
  initialProps: ["id", "className", "name", "value", "required", "checked"]
};

// src/checkbox.ws.ts
import { CheckboxCheckedIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates24
} from "@webstudio-is/react-sdk";
import { checkbox } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/checkbox.props.ts
var props26 = {
  about: { required: false, control: "text", type: "string" },
  accept: {
    required: false,
    control: "text",
    type: "string",
    description: "List of types the server accepts, typically a file type."
  },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  alt: {
    required: false,
    control: "text",
    type: "string",
    description: "Text description of the image, which is very important for accessibility and search engine optimization. Screen readers read this description to users so they know what the image means. Alt text is also displayed on the page if the image can't be loaded for some reason."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  checked: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether the element should be checked on page load."
  },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  disabled: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether the user can interact with the element."
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  enterKeyHint: {
    required: false,
    control: "select",
    type: "string",
    options: ["search", "enter", "done", "go", "next", "previous", "send"],
    description: "The enterkeyhint specifies what action label (or icon) to present for the enter key onvirtual keyboards. The attribute can be used with form controls (such asthe value of textarea elements), or in elements in anediting host (e.g., using contenteditable attribute)."
  },
  form: {
    required: false,
    control: "text",
    type: "string",
    description: "Indicates the form that is the owner of the element."
  },
  formAction: {
    required: false,
    control: "text",
    type: "string",
    description: "Indicates the action of the element, overriding the action defined inthe form."
  },
  formEncType: {
    required: false,
    control: "text",
    type: "string",
    description: `If the button/input is a submit button (e.g. type="submit"), this attribute sets the encoding type to use during form submission. If this attribute is specified, it overrides theenctype attribute of the button's form owner.`
  },
  formMethod: {
    required: false,
    control: "text",
    type: "string",
    description: `If the button/input is a submit button (e.g. type="submit"), this attribute sets the submission method to use during form submission (GET, POST, etc.). If this attribute is specified, it overrides the method attribute of the button's form owner.`
  },
  formNoValidate: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: `If the button/input is a submit button (e.g. type="submit"), this boolean attribute specifies that the form is not to be validatedwhen it is submitted. If this attribute is specified, it overrides thenovalidate attribute of the button's form owner.`
  },
  formTarget: {
    required: false,
    control: "text",
    type: "string",
    description: `If the button/input is a submit button (e.g. type="submit"), this attribute specifies the browsing context (for example, tab, window, or inline frame) in which to display the response that is received aftersubmitting the form. If this attribute is specified, it overrides thetarget attribute of the button's form owner.`
  },
  height: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the image\u2019s height in pixels."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "email",
      "tel",
      "none",
      "url",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  list: {
    required: false,
    control: "text",
    type: "string",
    description: "Identifies a list of pre-defined options to suggest to the user."
  },
  max: {
    required: false,
    control: "number",
    type: "number",
    description: "Indicates the maximum value allowed."
  },
  maxLength: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the maximum number of characters allowed in the element."
  },
  min: {
    required: false,
    control: "number",
    type: "number",
    description: "Indicates the minimum value allowed."
  },
  minLength: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the minimum number of characters allowed in the element."
  },
  multiple: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether multiple values can be entered in an input of the type email or file."
  },
  name: {
    required: false,
    control: "text",
    type: "string",
    description: "This name is important when submitting form data to the server, as it identifies the data associated with the input. When multiple inputs share the same name attribute, they are treated as part of the same group (e.g., radio buttons or checkboxes)."
  },
  nonce: { required: false, control: "text", type: "string" },
  pattern: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines a regular expression which the element's value will be validated against."
  },
  placeholder: {
    required: false,
    control: "text",
    type: "string",
    description: "Provides a hint to the user of what can be entered in the field."
  },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  readOnly: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether the element can be edited."
  },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  required: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether this form element must be filled before the form can be submitted."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  size: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the width of the element (in pixels). If the element'stype attribute is text or password then it's the number of characters."
  },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  src: {
    required: false,
    control: "text",
    type: "string",
    description: "The URL of the embeddable content."
  },
  step: { required: false, control: "number", type: "number" },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "on"]
  },
  value: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines a default value which will be displayed in the element on pageload."
  },
  vocab: { required: false, control: "text", type: "string" },
  width: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the image\u2019s width in pixels."
  }
};

// src/checkbox.ws.ts
var presetStyle15 = {
  input: [
    ...checkbox,
    {
      property: "marginRight",
      value: { type: "unit", unit: "em", value: 0.5 }
    }
  ]
};
var meta9 = {
  category: "forms",
  invalidAncestors: ["Button", "Link"],
  type: "control",
  description: "Use within a form to allow your users to toggle between checked and not checked. Group checkboxes by matching their \u201CName\u201D properties. Unlike radios, any number of checkboxes in a group can be checked.",
  icon: CheckboxCheckedIcon,
  presetStyle: presetStyle15,
  order: 6,
  states: [
    ...defaultStates24,
    { selector: ":checked", label: "Checked" },
    { selector: ":required", label: "Required" },
    { selector: ":optional", label: "Optional" },
    { selector: ":disabled", label: "Disabled" },
    { selector: ":enabled", label: "Enabled" },
    { selector: ":read-only", label: "Read Only" },
    { selector: ":read-write", label: "Read Write" }
  ],
  template: [
    {
      type: "instance",
      component: "Label",
      label: "Checkbox Field",
      children: [
        { type: "instance", component: "Checkbox", children: [] },
        {
          type: "instance",
          component: "Text",
          label: "Checkbox Label",
          props: [{ type: "string", name: "tag", value: "span" }],
          children: [{ type: "text", value: "Checkbox", placeholder: true }]
        }
      ]
    }
  ]
};
var propsMeta29 = {
  props: props26,
  initialProps: ["id", "className", "name", "value", "required", "checked"]
};

// src/vimeo.ws.ts
import { PlayIcon, SpinnerIcon, VimeoIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates25
} from "@webstudio-is/react-sdk";
import { div as div3 } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/vimeo.props.ts
var props27 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autopause: {
    description: "Whether to pause the current video when another Vimeo video on the same page starts to play. Set this value to false to permit simultaneous playback of all the videos on the page. This option has no effect if you've disabled cookies in your browser, either through browser settings or with an extension or plugin.",
    required: false,
    control: "boolean",
    type: "boolean",
    defaultValue: true
  },
  autopip: {
    description: "Whether to enable the browser to enter picture-in-picture mode automatically when switching tabs or windows, where supported.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  autoplay: {
    description: "Whether to start playback of the video automatically. This feature might not work on all devices.",
    required: false,
    control: "boolean",
    type: "boolean",
    defaultValue: false
  },
  autoSave: { required: false, control: "text", type: "string" },
  backgroundMode: {
    description: "Whether the player is in background mode, which hides the playback controls, enables autoplay, and loops the video.",
    required: false,
    control: "boolean",
    type: "boolean",
    defaultValue: false
  },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  controlsColor: {
    description: "A color value of the playback controls, which is normally #00ADEF. The embed settings of the video might override this value.",
    required: false,
    control: "color",
    type: "string"
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  doNotTrack: {
    description: "Whether to prevent the player from tracking session data, including cookies. Keep in mind that setting this argument to true also blocks video stats.",
    required: false,
    control: "boolean",
    type: "boolean",
    defaultValue: false
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "url",
      "none",
      "tel",
      "email",
      "numeric",
      "decimal"
    ]
  },
  interactiveParams: {
    description: "Key-value pairs representing dynamic parameters that are utilized on interactive videos with live elements, such as title=my-video,subtitle=interactive.",
    required: false,
    control: "text",
    type: "string"
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  keyboard: {
    description: "Whether to enable keyboard input to trigger player events. This setting doesn't affect tab control.",
    required: false,
    control: "boolean",
    type: "boolean",
    defaultValue: true
  },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  loading: {
    description: "Not a Vimeo attribute: Loading attribute for the iframe allows to eager or lazy load the source",
    required: false,
    control: "radio",
    type: "string",
    defaultValue: "lazy",
    options: ["eager", "lazy"]
  },
  loop: {
    description: "Whether to restart the video automatically after reaching the end.",
    required: false,
    control: "boolean",
    type: "boolean",
    defaultValue: false
  },
  muted: {
    description: "Whether the video is muted upon loading. The true value is required for the autoplay behavior in some browsers.",
    required: false,
    control: "boolean",
    type: "boolean",
    defaultValue: false
  },
  nonce: { required: false, control: "text", type: "string" },
  pip: {
    description: "Whether to include the picture-in-picture button among the player controls and enable the picture-in-picture API.",
    required: false,
    control: "boolean",
    type: "boolean",
    defaultValue: false
  },
  playsinline: {
    description: "Whether the video plays inline on supported mobile devices. To force the device to play the video in fullscreen mode instead, set this value to false.",
    required: false,
    control: "boolean",
    type: "boolean",
    defaultValue: true
  },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  quality: {
    description: "For videos on a Vimeo Plus account or higher: the playback quality of the video. Use auto for the best possible quality given available bandwidth and other factors. You can also specify 360p, 540p, 720p, 1080p, 2k, and 4k.",
    required: false,
    control: "select",
    type: "string",
    defaultValue: "auto",
    options: ["auto", "360p", "540p", "720p", "1080p", "2k", "4k"]
  },
  radioGroup: { required: false, control: "text", type: "string" },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  responsive: {
    description: "Whether to return a responsive embed code, or one that provides intelligent adjustments based on viewing conditions. We recommend this option for mobile-optimized sites.",
    required: false,
    control: "boolean",
    type: "boolean",
    defaultValue: true
  },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  showByline: {
    description: "Whether to display the video owner's name.",
    required: false,
    control: "boolean",
    type: "boolean",
    defaultValue: false
  },
  showControls: {
    description: "Whether to display the player's interactive elements, including the play bar and sharing buttons. Set this option to false for a chromeless experience. To control playback when the play/pause button is hidden, set autoplay to true, use keyboard controls (which remain active), or implement our player SDK.",
    required: false,
    control: "boolean",
    type: "boolean",
    defaultValue: true
  },
  showPortrait: {
    description: "Whether to display the video owner's portrait. Only works if either title or byline are also enabled",
    required: false,
    control: "boolean",
    type: "boolean",
    defaultValue: true
  },
  showPreview: {
    description: "Not a Vimeo attribute: Whether the preview image should be loaded from Vimeo API. Ideally don't use it, because it will show up with some delay and will make your project feel slower.",
    required: false,
    control: "boolean",
    type: "boolean",
    defaultValue: false
  },
  showTitle: {
    description: "Whether the player displays the title overlay.",
    required: false,
    control: "boolean",
    type: "boolean",
    defaultValue: false
  },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  speed: {
    description: "Whether the player displays speed controls in the preferences menu and enables the playback rate API.",
    required: false,
    control: "boolean",
    type: "boolean",
    defaultValue: false
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  texttrack: {
    description: "The text track to display with the video. Specify the text track by its language code (en), the language code and locale (en-US), or the language code and kind (en.captions). For this argument to work, the video must already have a text track of the given type; see our Help Center or Working with Text Track Uploads for more information.\nTo enable automatically generated closed captions instead, provide the value en-x-autogen. Please note that, at the present time, automatic captions are always in English.",
    required: false,
    control: "text",
    type: "string"
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  transparent: {
    description: "Whether the responsive player and transparent background are enabled.",
    required: false,
    control: "boolean",
    type: "boolean",
    defaultValue: true
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  url: {
    description: "The ID or the URL of the video on Vimeo. You must supply one of these values to identify the video. When the video's privacy setting is Private, you must use the URL, and the URL must include the h parameter. For more information, see Vimeo\u2019s introductory guide.",
    required: false,
    control: "text",
    type: "string"
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/vimeo.ws.ts
var initialProps = [
  "id",
  "className",
  "url",
  "quality",
  "showPreview",
  "autoplay",
  "loading",
  "backgroundMode",
  "doNotTrack",
  "loop",
  "muted",
  "showPortrait",
  "showByline",
  "showTitle",
  "showControls",
  "controlsColor"
];
var propsMeta30 = {
  props: props27,
  initialProps
};

// src/vimeo-preview-image.ws.ts
import "@webstudio-is/react-sdk";

// src/__generated__/vimeo-preview-image.props.ts
var props28 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  alt: {
    required: false,
    control: "text",
    type: "string",
    description: "Text description of the image, which is very important for accessibility and search engine optimization. Screen readers read this description to users so they know what the image means. Alt text is also displayed on the page if the image can't be loaded for some reason."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  crossOrigin: {
    required: false,
    control: "radio",
    type: "string",
    options: ["", "anonymous", "use-credentials"],
    description: "How the element handles cross-origin requests"
  },
  datatype: { required: false, control: "text", type: "string" },
  decoding: {
    required: false,
    control: "radio",
    type: "string",
    options: ["async", "auto", "sync"],
    description: "Indicates the preferred method to decode the image."
  },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  fetchPriority: {
    required: false,
    control: "radio",
    type: "string",
    options: ["high", "low", "auto"]
  },
  height: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the image\u2019s height in pixels."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  loading: {
    required: false,
    control: "radio",
    type: "string",
    options: ["eager", "lazy"],
    description: "Determines whether the image will load as soon as possible (Eager), or when it scrolls into view (Lazy). Lazy loading is a great option for pages with many images because it can significantly reduce the time it takes for the page to load initially."
  },
  nonce: { required: false, control: "text", type: "string" },
  optimize: { required: false, control: "boolean", type: "boolean" },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  quality: { required: false, control: "number", type: "number" },
  radioGroup: { required: false, control: "text", type: "string" },
  referrerPolicy: {
    required: false,
    control: "select",
    type: "string",
    options: [
      "",
      "origin",
      "no-referrer",
      "no-referrer-when-downgrade",
      "origin-when-cross-origin",
      "same-origin",
      "strict-origin",
      "strict-origin-when-cross-origin",
      "unsafe-url"
    ],
    description: "Specifies which referrer is sent when fetching the resource."
  },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  sizes: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  src: {
    required: false,
    control: "text",
    type: "string",
    description: "The URL of the embeddable content."
  },
  srcSet: {
    required: false,
    control: "text",
    type: "string",
    description: "One or more responsive image candidates."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  useMap: { required: false, control: "text", type: "string" },
  vocab: { required: false, control: "text", type: "string" },
  width: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the image\u2019s width in pixels."
  }
};

// src/vimeo-preview-image.ws.ts
var meta10 = {
  ...meta6,
  category: "hidden",
  label: "Preview Image",
  requiredAncestors: ["Vimeo"]
};
var propsMeta31 = {
  props: { ...props28, ...propsOverrides },
  initialProps: propsMeta20.initialProps
};

// src/vimeo-play-button.ws.ts
import {
  defaultStates as defaultStates26
} from "@webstudio-is/react-sdk";

// src/__generated__/vimeo-play-button.props.ts
var props29 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  disabled: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether the user can interact with the element."
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  form: {
    required: false,
    control: "text",
    type: "string",
    description: "Indicates the form that is the owner of the element."
  },
  formAction: {
    required: false,
    control: "text",
    type: "string",
    description: "Indicates the action of the element, overriding the action defined inthe form."
  },
  formEncType: {
    required: false,
    control: "text",
    type: "string",
    description: `If the button/input is a submit button (e.g. type="submit"), this attribute sets the encoding type to use during form submission. If this attribute is specified, it overrides theenctype attribute of the button's form owner.`
  },
  formMethod: {
    required: false,
    control: "text",
    type: "string",
    description: `If the button/input is a submit button (e.g. type="submit"), this attribute sets the submission method to use during form submission (GET, POST, etc.). If this attribute is specified, it overrides the method attribute of the button's form owner.`
  },
  formNoValidate: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: `If the button/input is a submit button (e.g. type="submit"), this boolean attribute specifies that the form is not to be validatedwhen it is submitted. If this attribute is specified, it overrides thenovalidate attribute of the button's form owner.`
  },
  formTarget: {
    required: false,
    control: "text",
    type: "string",
    description: `If the button/input is a submit button (e.g. type="submit"), this attribute specifies the browsing context (for example, tab, window, or inline frame) in which to display the response that is received aftersubmitting the form. If this attribute is specified, it overrides thetarget attribute of the button's form owner.`
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  name: {
    required: false,
    control: "text",
    type: "string",
    description: "This name is important when submitting form data to the server, as it identifies the data associated with the input. When multiple inputs share the same name attribute, they are treated as part of the same group (e.g., radio buttons or checkboxes)."
  },
  nonce: { required: false, control: "text", type: "string" },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  type: {
    required: false,
    control: "radio",
    type: "string",
    options: ["button", "submit", "reset"],
    description: "Defines the type of the element."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  value: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines a default value which will be displayed in the element on pageload."
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/vimeo-play-button.ws.ts
import { ButtonElementIcon as ButtonElementIcon2 } from "@webstudio-is/icons/svg";
import { button as button2 } from "@webstudio-is/sdk/normalize.css";
var propsMeta32 = {
  props: props29,
  initialProps: ["id", "className"]
};

// src/vimeo-spinner.ws.ts
import {
  defaultStates as defaultStates27
} from "@webstudio-is/react-sdk";

// src/__generated__/vimeo-spinner.props.ts
var props30 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  nonce: { required: false, control: "text", type: "string" },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/vimeo-spinner.ws.ts
import { div as div4 } from "@webstudio-is/sdk/normalize.css";
import { BoxIcon as BoxIcon2 } from "@webstudio-is/icons/svg";
var propsMeta33 = {
  props: props30,
  initialProps: ["id", "className"]
};

// src/xml-node.ws.ts
import { XmlIcon } from "@webstudio-is/icons/svg";
import "@webstudio-is/react-sdk";

// src/__generated__/xml-node.props.ts
var props31 = {
  tag: { required: false, control: "text", type: "string", defaultValue: "" },
  xmlns: { required: false, control: "text", type: "string" }
};

// src/xml-node.ws.ts
var propsMeta34 = {
  props: props31,
  initialProps: ["tag"]
};

// src/time.ws.ts
import { CalendarIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates28
} from "@webstudio-is/react-sdk";
import { time } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/time.props.ts
var props32 = {
  country: {
    required: false,
    control: "select",
    type: "string",
    defaultValue: "GB",
    options: [
      "AF",
      "AL",
      "DZ",
      "AS",
      "AD",
      "AO",
      "AI",
      "AQ",
      "AG",
      "AR",
      "AM",
      "AW",
      "AU",
      "AT",
      "AZ",
      "BS",
      "BH",
      "BD",
      "BB",
      "BY",
      "BE",
      "BZ",
      "BJ",
      "BM",
      "BT",
      "BO",
      "BA",
      "BW",
      "BR",
      "BN",
      "BG",
      "BF",
      "BI",
      "CV",
      "KH",
      "CM",
      "CA",
      "KY",
      "CF",
      "TD",
      "CL",
      "CN",
      "CO",
      "KM",
      "CG",
      "CD",
      "CR",
      "HR",
      "CU",
      "CY",
      "CZ",
      "DK",
      "DJ",
      "DM",
      "DO",
      "EC",
      "EG",
      "SV",
      "GQ",
      "ER",
      "EE",
      "SZ",
      "ET",
      "FJ",
      "FI",
      "FR",
      "GA",
      "GM",
      "GE",
      "DE",
      "GH",
      "GR",
      "GD",
      "GT",
      "GN",
      "GW",
      "GY",
      "HT",
      "HN",
      "HU",
      "IS",
      "IN",
      "ID",
      "IR",
      "IQ",
      "IE",
      "IL",
      "IT",
      "JM",
      "JP",
      "JO",
      "KZ",
      "KE",
      "KI",
      "KP",
      "KR",
      "KW",
      "KG",
      "LA",
      "LV",
      "LB",
      "LS",
      "LR",
      "LY",
      "LI",
      "LT",
      "LU",
      "MG",
      "MW",
      "MY",
      "MV",
      "ML",
      "MT",
      "MH",
      "MR",
      "MU",
      "MX",
      "FM",
      "MD",
      "MC",
      "MN",
      "ME",
      "MA",
      "MZ",
      "MM",
      "NA",
      "NR",
      "NP",
      "NL",
      "NZ",
      "NI",
      "NE",
      "NG",
      "NO",
      "OM",
      "PK",
      "PW",
      "PA",
      "PG",
      "PY",
      "PE",
      "PH",
      "PL",
      "PT",
      "QA",
      "RO",
      "RU",
      "RW",
      "KN",
      "LC",
      "VC",
      "WS",
      "SM",
      "ST",
      "SA",
      "SN",
      "RS",
      "SC",
      "SL",
      "SG",
      "SK",
      "SI",
      "SB",
      "SO",
      "ZA",
      "SS",
      "ES",
      "LK",
      "SD",
      "SR",
      "SE",
      "CH",
      "SY",
      "TW",
      "TJ",
      "TZ",
      "TH",
      "TL",
      "TG",
      "TO",
      "TT",
      "TN",
      "TR",
      "TM",
      "TV",
      "UG",
      "UA",
      "AE",
      "GB",
      "US",
      "UY",
      "UZ",
      "VU",
      "VA",
      "VE",
      "VN",
      "YE",
      "ZM",
      "ZW"
    ]
  },
  dateStyle: {
    required: false,
    control: "select",
    type: "string",
    defaultValue: "medium",
    options: ["full", "long", "medium", "short", "none"]
  },
  datetime: {
    required: false,
    control: "text",
    type: "string",
    defaultValue: "dateTime attribute is not set"
  },
  language: {
    required: false,
    control: "select",
    type: "string",
    defaultValue: "en",
    options: [
      "hr",
      "th",
      "tr",
      "id",
      "is",
      "cy",
      "fr",
      "af",
      "am",
      "ar",
      "az",
      "be",
      "bg",
      "bn",
      "bs",
      "ca",
      "cs",
      "da",
      "de",
      "el",
      "en",
      "es",
      "et",
      "eu",
      "fa",
      "fi",
      "ga",
      "gl",
      "gu",
      "he",
      "hi",
      "hu",
      "hy",
      "it",
      "ja",
      "ka",
      "kk",
      "km",
      "kn",
      "ko",
      "ky",
      "lb",
      "lt",
      "lv",
      "mk",
      "ml",
      "mn",
      "mr",
      "ms",
      "mt",
      "nb",
      "nl",
      "nn",
      "pl",
      "pt",
      "ro",
      "ru",
      "si",
      "sk",
      "sl",
      "sq",
      "sr",
      "sv",
      "sw",
      "ta",
      "te",
      "uk",
      "ur",
      "uz",
      "vi",
      "zh"
    ],
    description: "Defines the script language used in the element."
  },
  timeStyle: {
    required: false,
    control: "select",
    type: "string",
    defaultValue: "none",
    options: ["full", "long", "medium", "short", "none"]
  }
};

// src/time.ws.ts
var propsMeta35 = {
  props: props32,
  initialProps: ["datetime", "language", "country", "dateStyle", "timeStyle"]
};

// src/select.ws.ts
import { SelectIcon } from "@webstudio-is/icons/svg";
import {
  defaultStates as defaultStates29
} from "@webstudio-is/react-sdk";
import { select } from "@webstudio-is/sdk/normalize.css";

// src/__generated__/select.props.ts
var props33 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoComplete: {
    required: false,
    control: "text",
    type: "string",
    description: "Indicates whether controls in this form can by default have their valuesautomatically completed by the browser."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  disabled: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether the user can interact with the element."
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  form: {
    required: false,
    control: "text",
    type: "string",
    description: "Indicates the form that is the owner of the element."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  multiple: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether multiple values can be entered in an input of the type email or file."
  },
  name: {
    required: false,
    control: "text",
    type: "string",
    description: "This name is important when submitting form data to the server, as it identifies the data associated with the input. When multiple inputs share the same name attribute, they are treated as part of the same group (e.g., radio buttons or checkboxes)."
  },
  nonce: { required: false, control: "text", type: "string" },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  required: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether this form element must be filled before the form can be submitted."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  size: {
    required: false,
    control: "number",
    type: "number",
    description: "Defines the width of the element (in pixels). If the element'stype attribute is text or password then it's the number of characters."
  },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  value: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines a default value which will be displayed in the element on pageload."
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/select.ws.ts
var presetStyle16 = {
  select: [
    ...select,
    {
      property: "display",
      value: { type: "keyword", value: "block" }
    }
  ]
};
var meta11 = {
  category: "forms",
  invalidAncestors: ["Button", "Link"],
  type: "container",
  description: "A drop-down menu for users to select a single option from a predefined list.",
  icon: SelectIcon,
  presetStyle: presetStyle16,
  order: 4,
  states: [
    ...defaultStates29,
    { selector: "::placeholder", label: "Placeholder" },
    { selector: ":valid", label: "Valid" },
    { selector: ":invalid", label: "Invalid" },
    { selector: ":required", label: "Required" },
    { selector: ":optional", label: "Optional" }
  ],
  template: [
    {
      type: "instance",
      component: "Select",
      label: "Select",
      children: [
        {
          type: "instance",
          component: "Option",
          label: "Option",
          props: [
            { type: "string", name: "label", value: "Please choose an option" },
            { type: "string", name: "value", value: "" }
          ],
          children: []
        },
        {
          type: "instance",
          component: "Option",
          label: "Option",
          props: [
            { type: "string", name: "label", value: "Option A" },
            { type: "string", name: "value", value: "a" }
          ],
          children: []
        },
        {
          type: "instance",
          component: "Option",
          label: "Option",
          props: [
            { type: "string", name: "label", value: "Option B" },
            { type: "string", name: "value", value: "b" }
          ],
          children: []
        },
        {
          type: "instance",
          component: "Option",
          label: "Option",
          props: [
            { type: "string", name: "label", value: "Option C" },
            { type: "string", name: "value", value: "c" }
          ],
          children: []
        }
      ]
    }
  ]
};
var propsMeta36 = {
  props: props33,
  initialProps: [
    "id",
    "className",
    "name",
    "value",
    "multiple",
    "required",
    "autoFocus"
  ]
};

// src/option.ws.ts
import { ItemIcon } from "@webstudio-is/icons/svg";
import "@webstudio-is/react-sdk";

// src/__generated__/option.props.ts
var props34 = {
  about: { required: false, control: "text", type: "string" },
  accessKey: {
    required: false,
    control: "text",
    type: "string",
    description: "Keyboard shortcut to activate or add focus to the element."
  },
  "aria-activedescendant": {
    description: "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-atomic": {
    description: "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-autocomplete": {
    description: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
    required: false,
    control: "select",
    type: "string",
    options: ["list", "none", "inline", "both"]
  },
  "aria-braillelabel": {
    description: "Defines a string value that labels the current element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-brailleroledescription": {
    description: "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-busy": { required: false, control: "boolean", type: "boolean" },
  "aria-checked": {
    description: 'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colcount": {
    description: "Defines the total number of columns in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindex": {
    description: "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-colindextext": {
    description: "Defines a human readable text alternative of aria-colindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-colspan": {
    description: "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-controls": {
    description: "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-current": {
    description: "Indicates the element that represents the current item within a container or set of related elements.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-describedby": {
    description: "Identifies the element (or elements) that describes the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-description": {
    description: "Defines a string value that describes or annotates the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-details": {
    description: "Identifies the element that provides a detailed, extended description for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-disabled": {
    description: "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-dropeffect": {
    description: "Indicates what functions can be performed when a dragged object is released on the drop target.",
    required: false,
    control: "select",
    type: "string",
    options: ["link", "none", "copy", "execute", "move", "popup"]
  },
  "aria-errormessage": {
    description: "Identifies the element that provides an error message for the object.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-expanded": {
    description: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-flowto": {
    description: "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-grabbed": {
    description: `Indicates an element's "grabbed" state in a drag-and-drop operation.`,
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-haspopup": {
    description: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-hidden": {
    description: "Indicates whether the element is exposed to an accessibility API.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-invalid": {
    description: "Indicates the entered value does not conform to the format expected by the application.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-keyshortcuts": {
    description: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-label": {
    description: "Provides the accessible name that describes an interactive element if no other accessible name exists, for example in a button that contains an image with no text.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-labelledby": {
    description: "Identifies the element (or elements) that labels the current element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-level": {
    description: "Defines the hierarchical level of an element within a structure.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-live": {
    description: "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
    required: false,
    control: "radio",
    type: "string",
    options: ["off", "assertive", "polite"]
  },
  "aria-modal": {
    description: "Indicates whether an element is modal when displayed.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiline": {
    description: "Indicates whether a text box accepts multiple lines of input or only a single line.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-multiselectable": {
    description: "Indicates that the user may select more than one item from the current selectable descendants.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-orientation": {
    description: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
    required: false,
    control: "radio",
    type: "string",
    options: ["horizontal", "vertical"]
  },
  "aria-owns": {
    description: "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-placeholder": {
    description: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-posinset": {
    description: "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-pressed": {
    description: 'Indicates the current "pressed" state of toggle buttons.',
    required: false,
    control: "text",
    type: "string"
  },
  "aria-readonly": {
    description: "Indicates that the element is not editable, but is otherwise operable.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-relevant": {
    description: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
    required: false,
    control: "select",
    type: "string",
    options: [
      "text",
      "additions",
      "additions removals",
      "additions text",
      "all",
      "removals",
      "removals additions",
      "removals text",
      "text additions",
      "text removals"
    ]
  },
  "aria-required": {
    description: "Indicates that user input is required on the element before a form may be submitted.",
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-roledescription": {
    description: "Defines a human-readable, author-localized description for the role of an element.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowcount": {
    description: "Defines the total number of rows in a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindex": {
    description: "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-rowindextext": {
    description: "Defines a human readable text alternative of aria-rowindex.",
    required: false,
    control: "text",
    type: "string"
  },
  "aria-rowspan": {
    description: "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-selected": {
    description: 'Indicates the current "selected" state of various widgets.',
    required: false,
    control: "boolean",
    type: "boolean"
  },
  "aria-setsize": {
    description: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-sort": {
    description: "Indicates if items in a table or grid are sorted in ascending or descending order.",
    required: false,
    control: "select",
    type: "string",
    options: ["none", "ascending", "descending", "other"]
  },
  "aria-valuemax": {
    description: "Defines the maximum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuemin": {
    description: "Defines the minimum allowed value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuenow": {
    description: "Defines the current value for a range widget.",
    required: false,
    control: "number",
    type: "number"
  },
  "aria-valuetext": {
    description: "Defines the human readable text alternative of aria-valuenow for a range widget.",
    required: false,
    control: "text",
    type: "string"
  },
  autoCapitalize: {
    required: false,
    control: "text",
    type: "string",
    description: "Sets whether input is automatically capitalized when entered by user."
  },
  autoCorrect: { required: false, control: "text", type: "string" },
  autoFocus: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates that an element should be focused on page load, or when its parent dialog is displayed."
  },
  autoSave: { required: false, control: "text", type: "string" },
  className: { required: false, control: "text", type: "string" },
  color: {
    required: false,
    control: "color",
    type: "string",
    description: "This attribute sets the text color using either a named color or a  color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead."
  },
  content: {
    required: false,
    control: "text",
    type: "string",
    description: "A value associated with http-equiv orname depending on the context."
  },
  contextMenu: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the ID of a menu element which willserve as the element's context menu."
  },
  datatype: { required: false, control: "text", type: "string" },
  defaultChecked: { required: false, control: "boolean", type: "boolean" },
  defaultValue: { required: false, control: "text", type: "string" },
  dir: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
  },
  disabled: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether the user can interact with the element."
  },
  draggable: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines whether the element can be dragged."
  },
  hidden: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
  },
  id: {
    required: false,
    control: "text",
    type: "string",
    description: "Often used with CSS to style a specific element. The value of this attribute must be unique."
  },
  inputMode: {
    description: "Hints at the type of data that might be entered by the user while editing the element or its contents",
    required: false,
    control: "select",
    type: "string",
    options: [
      "search",
      "text",
      "none",
      "tel",
      "url",
      "email",
      "numeric",
      "decimal"
    ]
  },
  is: {
    description: "Specify that a standard HTML element should behave like a defined custom built-in element",
    required: false,
    control: "text",
    type: "string"
  },
  itemID: { required: false, control: "text", type: "string" },
  itemProp: { required: false, control: "text", type: "string" },
  itemRef: { required: false, control: "text", type: "string" },
  itemScope: { required: false, control: "boolean", type: "boolean" },
  itemType: { required: false, control: "text", type: "string" },
  label: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies a user-readable title of the element."
  },
  lang: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines the language used in the element."
  },
  nonce: { required: false, control: "text", type: "string" },
  prefix: { required: false, control: "text", type: "string" },
  property: { required: false, control: "text", type: "string" },
  radioGroup: { required: false, control: "text", type: "string" },
  rel: {
    required: false,
    control: "text",
    type: "string",
    description: "Specifies the relationship of the target object to the link object."
  },
  resource: { required: false, control: "text", type: "string" },
  results: { required: false, control: "number", type: "number" },
  rev: { required: false, control: "text", type: "string" },
  role: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines an explicit role for an element for use by assistive technologies."
  },
  security: { required: false, control: "text", type: "string" },
  selected: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Defines a value which will be selected on page load."
  },
  slot: {
    required: false,
    control: "text",
    type: "string",
    description: "Assigns a slot in a shadow DOM shadow tree to an element."
  },
  spellCheck: {
    required: false,
    control: "boolean",
    type: "boolean",
    description: "Indicates whether spell checking is allowed for the element."
  },
  suppressContentEditableWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  suppressHydrationWarning: {
    required: false,
    control: "boolean",
    type: "boolean"
  },
  tabIndex: {
    required: false,
    control: "number",
    type: "number",
    description: "Overrides the browser's default tab order and follows the one specified instead."
  },
  title: {
    required: false,
    control: "text",
    type: "string",
    description: "Text to be displayed in a tooltip when hovering over the element."
  },
  translate: {
    required: false,
    control: "radio",
    type: "string",
    options: ["yes", "no"],
    description: "Specify whether an element's attribute values and the values of its text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  typeof: { required: false, control: "text", type: "string" },
  unselectable: {
    required: false,
    control: "radio",
    type: "string",
    options: ["on", "off"]
  },
  value: {
    required: false,
    control: "text",
    type: "string",
    description: "Defines a default value which will be displayed in the element on pageload."
  },
  vocab: { required: false, control: "text", type: "string" }
};

// src/option.ws.ts
var propsMeta37 = {
  props: props34,
  initialProps: ["label", "selected", "value", "label", "disabled"]
};
export {
  propsMeta21 as Blockquote,
  propsMeta5 as Body,
  propsMeta13 as Bold,
  propsMeta6 as Box,
  propsMeta17 as Button,
  propsMeta29 as Checkbox,
  propsMeta25 as CodeText,
  propsMeta19 as Form,
  propsMeta2 as Fragment,
  propsMeta8 as Heading,
  propsMeta3 as HtmlEmbed,
  propsMeta20 as Image,
  propsMeta18 as Input,
  propsMeta14 as Italic,
  propsMeta26 as Label,
  propsMeta10 as Link,
  propsMeta22 as List,
  propsMeta23 as ListItem,
  propsMeta4 as MarkdownEmbed,
  propsMeta37 as Option,
  propsMeta9 as Paragraph,
  propsMeta28 as RadioButton,
  propsMeta19 as RemixForm,
  propsMeta11 as RichTextLink,
  propsMeta36 as Select,
  propsMeta24 as Separator,
  propsMeta as Slot,
  propsMeta12 as Span,
  propsMeta16 as Subscript,
  propsMeta15 as Superscript,
  propsMeta7 as Text,
  propsMeta27 as Textarea,
  propsMeta35 as Time,
  propsMeta30 as Vimeo,
  propsMeta32 as VimeoPlayButton,
  propsMeta31 as VimeoPreviewImage,
  propsMeta33 as VimeoSpinner,
  propsMeta34 as XmlNode
};
